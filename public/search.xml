<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hexo -15- 折叠博客内容</title>
    <url>/2020/12/26/hexo/16_fold-content/fold-content/</url>
    <content><![CDATA[<blockquote>
<p>在写博客时，可能会遇到需要读者选读的内容，此时出现了折叠博客内容的需求。本文介绍在Hexo中自定义折叠部分内容的方法。</p>
</blockquote>
<a id="more"></a>

<h3 id="需求描述"><a href="#需求描述" class="headerlink" title="需求描述"></a>需求描述</h3><ul>
<li>可折叠部分内容，暴露标题，在读者需要查看标题下内容时点击展开</li>
<li>支持尽可能多的markdown语法</li>
<li>方便快速</li>
</ul>
<h3 id="方法一：-HTML语法-使用-details-元素"><a href="#方法一：-HTML语法-使用-details-元素" class="headerlink" title="方法一： HTML语法 - 使用 details 元素"></a>方法一： HTML语法 - 使用 details 元素</h3><h4 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h4><blockquote>
<p>使用 <code>&lt;details&gt; &lt;/details&gt;</code> 标签包裹需要隐藏的内容<br>在其中使用<code>&lt;summary&gt; &lt;/summary&gt;</code>标签包裹需要隐藏内容的标题</p>
</blockquote>
<details>
  <summary>隐藏内容的标题</summary>

<p>隐藏文字隐藏文字隐藏文字。  </p>
<p>支持 <code>markdown</code> 语法</p>
<h5 id="支持标题"><a href="#支持标题" class="headerlink" title="支持标题"></a>支持标题</h5><h5 id="支持简单文本编辑"><a href="#支持简单文本编辑" class="headerlink" title="支持简单文本编辑"></a>支持简单文本编辑</h5><ul>
<li>支持 <strong>粗体</strong>、<em>斜体</em></li>
</ul>
<h5 id="支持列表"><a href="#支持列表" class="headerlink" title="支持列表"></a>支持列表</h5><ul>
<li>列表1</li>
<li>列表2</li>
</ul>
<h5 id="支持图片"><a href="#支持图片" class="headerlink" title="支持图片"></a>支持图片</h5><ul>
<li>md插入图片语法：<img src="https://www.zywvvd.com/about/index/1.png" alt="markdown 图片"></li>
<li>html插入图片语法：</li>
</ul>
<div style='margin:0 auto'>
<img src="https://www.baidu.com/img/baidu_jgylogo3.gif"  />
</div>

<h5 id="支持代码块"><a href="#支持代码块" class="headerlink" title="支持代码块"></a>支持代码块</h5><ul>
<li>行内代码 <code>markdown</code></li>
</ul>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;initializer_list&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">A</span> &#123;</span></span><br><span class="line">A() &#123; <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">"1"</span>; &#125;</span><br><span class="line">A(<span class="keyword">int</span>) &#123; <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">"2"</span>; &#125;</span><br><span class="line">A(<span class="built_in">std</span>::<span class="built_in">initializer_list</span>&lt;<span class="keyword">int</span>&gt;) &#123; <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">"3"</span>; &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span> </span>&#123;</span><br><span class="line">A a1;</span><br><span class="line">A a2&#123;&#125;;</span><br><span class="line">A a3&#123; <span class="number">1</span> &#125;;</span><br><span class="line">A a4&#123; <span class="number">1</span>, <span class="number">2</span> &#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h5 id="支持表格"><a href="#支持表格" class="headerlink" title="支持表格"></a>支持表格</h5><table>
<thead>
<tr>
<th>文字</th>
<th>文字</th>
</tr>
</thead>
<tbody><tr>
<td>文字</td>
<td>文字</td>
</tr>
</tbody></table>
<h5 id="支持公式"><a href="#支持公式" class="headerlink" title="支持公式"></a>支持公式</h5><ul>
<li>行内公式$Y=aX^2+bX+c$<br>$$<br>Y=aX^2+bX+c<br>$$</li>
</ul>
</details>

<h4 id="示例代码"><a href="#示例代码" class="headerlink" title="示例代码"></a>示例代码</h4><blockquote>
<p>上述示例代码如下(由于markdown解码问题，示例cpp代码段前后的 ``` 请自行补全)：</p>
</blockquote>
<details>
  <summary>示例代码</summary>


<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;details&gt;</span><br><span class="line">  &lt;summary&gt;隐藏内容的标题&lt;&#x2F;summary&gt;</span><br><span class="line"></span><br><span class="line">隐藏文字隐藏文字隐藏文字。  </span><br><span class="line"></span><br><span class="line">支持 &#96;markdown&#96; 语法</span><br><span class="line"></span><br><span class="line">##### 支持标题</span><br><span class="line"></span><br><span class="line">##### 支持简单文本编辑</span><br><span class="line">- 支持 **粗体**、*斜体*</span><br><span class="line"></span><br><span class="line">##### 支持列表</span><br><span class="line">- 列表1</span><br><span class="line">- 列表2</span><br><span class="line"></span><br><span class="line">##### 支持图片</span><br><span class="line">- md插入图片语法：![markdown 图片](https:&#x2F;&#x2F;www.zywvvd.com&#x2F;about&#x2F;index&#x2F;1.png)</span><br><span class="line">- html插入图片语法：</span><br><span class="line"></span><br><span class="line">&lt;div style&#x3D;&#39;margin:0 auto&#39;&gt;</span><br><span class="line">&lt;img src&#x3D;&quot;https:&#x2F;&#x2F;www.baidu.com&#x2F;img&#x2F;baidu_jgylogo3.gif&quot;  &#x2F;&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line"></span><br><span class="line">##### 支持代码块</span><br><span class="line">- 行内代码 &#96;markdown&#96;</span><br><span class="line"></span><br><span class="line">cpp</span><br><span class="line">#include &lt;initializer_list&gt;</span><br><span class="line">#include &lt;iostream&gt;</span><br><span class="line">struct A &#123;</span><br><span class="line">    A() &#123; std::cout &lt;&lt; &quot;1&quot;; &#125;</span><br><span class="line">    A(int) &#123; std::cout &lt;&lt; &quot;2&quot;; &#125;</span><br><span class="line">    A(std::initializer_list&lt;int&gt;) &#123; std::cout &lt;&lt; &quot;3&quot;; &#125;</span><br><span class="line">&#125;;</span><br><span class="line">int main(int argc, char *argv[]) &#123;</span><br><span class="line">    A a1;</span><br><span class="line">    A a2&#123;&#125;;</span><br><span class="line">    A a3&#123; 1 &#125;;</span><br><span class="line">    A a4&#123; 1, 2 &#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">##### 支持表格</span><br><span class="line"></span><br><span class="line">| 文字 | 文字 |</span><br><span class="line">| ---- | ---- |</span><br><span class="line">| 文字 | 文字 |</span><br><span class="line"></span><br><span class="line">##### 支持公式</span><br><span class="line">- 行内公式$Y&#x3D;aX^2+bX+c$</span><br><span class="line">$$</span><br><span class="line">Y&#x3D;aX^2+bX+c</span><br><span class="line">$$</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;details&gt;</span><br></pre></td></tr></table></figure>

</details>

<h3 id="方法二：-使用hexo-sliding-spoiler插件"><a href="#方法二：-使用hexo-sliding-spoiler插件" class="headerlink" title="方法二： 使用hexo-sliding-spoiler插件"></a>方法二： 使用hexo-sliding-spoiler插件</h3><h4 id="官网链接"><a href="#官网链接" class="headerlink" title="官网链接"></a>官网链接</h4><p><a href="https://github.com/fletchto99/hexo-sliding-spoiler">hexo-sliding-spoiler</a></p>
<h4 id="插件安装"><a href="#插件安装" class="headerlink" title="插件安装"></a>插件安装</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install hexo-sliding-spoiler --save</span><br></pre></td></tr></table></figure>

<h4 id="自定义设置"><a href="#自定义设置" class="headerlink" title="自定义设置"></a>自定义设置</h4><ul>
<li>可以修改<code>css</code>文件来自定义配置样式</li>
</ul>
<blockquote>
<p>例如：可以自定义修改默认的 <code>show hide</code> 关键字</p>
<ul>
<li>打开文件 <code>hexo\node_modules\hexo-sliding-spoiler\assets\spoiler.css</code>，找到25-31行，修改其中的 <code>content</code>。</li>
<li>例如： 将<code>Show</code> 改为 <code>▶</code> ，<code>Hide</code>改为<code>▼</code></li>
</ul>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.spoiler.collapsed .spoiler-title:before &#123;</span><br><span class="line">    content: &quot;Show: &quot;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.spoiler.expanded .spoiler-title:before &#123;</span><br><span class="line">    content: &quot;Hide: &quot;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="使用方法-1"><a href="#使用方法-1" class="headerlink" title="使用方法"></a>使用方法</h4><blockquote>
<p>安装好插件后，使用 <code> {% spoiler "隐藏内容的标题" %} </code> 和<code> {% endspoiler %}</code>包裹需要隐藏的内容即可。</p>
</blockquote>
<div class='spoiler collapsed'>
    <div class='spoiler-title'>
        隐藏内容的标题
    </div>
    <div class='spoiler-content'>
        <p>隐藏文字隐藏文字隐藏文字。  </p>
<p>支持 <code>markdown</code> 语法</p>
<h5 id="支持标题"><a href="#支持标题" class="headerlink" title="支持标题"></a>支持标题</h5><h5 id="支持简单文本编辑"><a href="#支持简单文本编辑" class="headerlink" title="支持简单文本编辑"></a>支持简单文本编辑</h5><ul>
<li>支持 <strong>粗体</strong>、<em>斜体</em></li>
</ul>
<h5 id="支持列表"><a href="#支持列表" class="headerlink" title="支持列表"></a>支持列表</h5><ul>
<li>列表1</li>
<li>列表2</li>
</ul>
<h5 id="支持图片"><a href="#支持图片" class="headerlink" title="支持图片"></a>支持图片</h5><ul>
<li>md插入图片语法：<img src="https://www.zywvvd.com/about/index/1.png" alt="markdown 图片"></li>
<li>html插入图片语法：</li>
</ul>
<div style='margin:0 auto'>
<img src="https://www.baidu.com/img/baidu_jgylogo3.gif"  />
</div>

<h5 id="支持代码块"><a href="#支持代码块" class="headerlink" title="支持代码块"></a>支持代码块</h5><ul>
<li>行内代码 <code>markdown</code></li>
</ul>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;initializer_list&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">A</span> &#123;</span></span><br><span class="line">    A() &#123; <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">"1"</span>; &#125;</span><br><span class="line">    A(<span class="keyword">int</span>) &#123; <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">"2"</span>; &#125;</span><br><span class="line">    A(<span class="built_in">std</span>::<span class="built_in">initializer_list</span>&lt;<span class="keyword">int</span>&gt;) &#123; <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">"3"</span>; &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span> </span>&#123;</span><br><span class="line">    A a1;</span><br><span class="line">    A a2&#123;&#125;;</span><br><span class="line">    A a3&#123; <span class="number">1</span> &#125;;</span><br><span class="line">    A a4&#123; <span class="number">1</span>, <span class="number">2</span> &#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h5 id="支持表格"><a href="#支持表格" class="headerlink" title="支持表格"></a>支持表格</h5><table>
<thead>
<tr>
<th>文字</th>
<th>文字</th>
</tr>
</thead>
<tbody><tr>
<td>文字</td>
<td>文字</td>
</tr>
</tbody></table>
<h5 id="支持公式"><a href="#支持公式" class="headerlink" title="支持公式"></a>支持公式</h5><ul>
<li>行内公式$Y=aX^2+bX+c$<br>$$<br>Y=aX^2+bX+c<br>$$</li>
</ul>

    </div>
</div>

<h4 id="示例代码-1"><a href="#示例代码-1" class="headerlink" title="示例代码"></a>示例代码</h4><blockquote>
<p>上述示例代码如下(由于markdown解码问题，示例cpp代码段前后的 ``` 请自行补全)：</p>
</blockquote>
<div class='spoiler collapsed'>
    <div class='spoiler-title'>
        示例代码
    </div>
    <div class='spoiler-content'>
        <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% spoiler &quot;隐藏内容的标题&quot; %&#125;</span><br><span class="line"></span><br><span class="line">隐藏文字隐藏文字隐藏文字。  </span><br><span class="line"></span><br><span class="line">支持 &#96;markdown&#96; 语法</span><br><span class="line"></span><br><span class="line">##### 支持标题</span><br><span class="line"></span><br><span class="line">##### 支持简单文本编辑</span><br><span class="line">- 支持 **粗体**、*斜体*</span><br><span class="line"></span><br><span class="line">##### 支持列表</span><br><span class="line">- 列表1</span><br><span class="line">- 列表2</span><br><span class="line"></span><br><span class="line">##### 支持图片</span><br><span class="line">- md插入图片语法：![markdown 图片](https:&#x2F;&#x2F;www.zywvvd.com&#x2F;about&#x2F;index&#x2F;1.png)</span><br><span class="line">- html插入图片语法：</span><br><span class="line"></span><br><span class="line">&lt;div style&#x3D;&#39;margin:0 auto&#39;&gt;</span><br><span class="line">&lt;img src&#x3D;&quot;https:&#x2F;&#x2F;www.baidu.com&#x2F;img&#x2F;baidu_jgylogo3.gif&quot;  &#x2F;&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line"></span><br><span class="line">##### 支持代码块</span><br><span class="line">- 行内代码 &#96;markdown&#96;</span><br><span class="line"></span><br><span class="line">cpp</span><br><span class="line">#include &lt;initializer_list&gt;</span><br><span class="line">#include &lt;iostream&gt;</span><br><span class="line">struct A &#123;</span><br><span class="line">    A() &#123; std::cout &lt;&lt; &quot;1&quot;; &#125;</span><br><span class="line">    A(int) &#123; std::cout &lt;&lt; &quot;2&quot;; &#125;</span><br><span class="line">    A(std::initializer_list&lt;int&gt;) &#123; std::cout &lt;&lt; &quot;3&quot;; &#125;</span><br><span class="line">&#125;;</span><br><span class="line">int main(int argc, char *argv[]) &#123;</span><br><span class="line">    A a1;</span><br><span class="line">    A a2&#123;&#125;;</span><br><span class="line">    A a3&#123; 1 &#125;;</span><br><span class="line">    A a4&#123; 1, 2 &#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">##### 支持表格</span><br><span class="line"></span><br><span class="line">| 文字 | 文字 |</span><br><span class="line">| ---- | ---- |</span><br><span class="line">| 文字 | 文字 |</span><br><span class="line"></span><br><span class="line">##### 支持公式</span><br><span class="line">- 行内公式$Y&#x3D;aX^2+bX+c$</span><br><span class="line">$$</span><br><span class="line">Y&#x3D;aX^2+bX+c</span><br><span class="line">$$</span><br><span class="line"></span><br><span class="line">&#123;% endspoiler %&#125;</span><br></pre></td></tr></table></figure>



    </div>
</div>

<h3 id="方法对比"><a href="#方法对比" class="headerlink" title="方法对比"></a>方法对比</h3><table>
<thead>
<tr>
<th></th>
<th>details</th>
<th>endspoiler</th>
</tr>
</thead>
<tbody><tr>
<td>markdown支持</td>
<td>基本支持常用语法</td>
<td>基本支持常用语法</td>
</tr>
<tr>
<td>使用</td>
<td>直接使用</td>
<td>需要安装插件</td>
</tr>
<tr>
<td>外观</td>
<td>简洁清爽，保留原始格式</td>
<td>默认灰色底边，内容带框</td>
</tr>
<tr>
<td>动画</td>
<td>无</td>
<td>有过渡动画</td>
</tr>
<tr>
<td>配置</td>
<td>不需要/无法配置</td>
<td>可以自定义配置显示样式</td>
</tr>
</tbody></table>
<blockquote>
<p>个人建议使用 <code>endspoiler</code>插件，毕竟是为hexo设计的插件，可以进行自定义配置。</p>
</blockquote>
<h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><ul>
<li><a href="https://blog.csdn.net/qq_36408085/article/details/104323711" target="_blank" rel="noopener">https://blog.csdn.net/qq_36408085/article/details/104323711</a></li>
</ul>
<link rel="stylesheet" href="/labiyouxiaoxin2.github.io/css/spoiler.css" type="text/css"><script src="/labiyouxiaoxin2.github.io/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo -15- 解决 Hexo Mathjax 无法显示多行公式的问题</title>
    <url>/2020/12/22/hexo/15_formula/formula-error/</url>
    <content><![CDATA[<blockquote>
<p>Hexo比较好用的公式插件是Mathjax，但由于swig的文件解析机制，使得多行公式无法在Hexo中正常显示，本文介绍该问题的解决方法。</p>
</blockquote>
<a id="more"></a>

<h3 id="问题复现"><a href="#问题复现" class="headerlink" title="问题复现"></a>问题复现</h3><ul>
<li>准备输入一个矩阵：</li>
</ul>

$$
A = \left( {\begin{array}{*{20}{c}}
1&{}&{}&{}\\
{}&1&{}&{}\\
{}&{}&1&{}\\
{}&{}&{}&1
\end{array}} \right)
$$


<ul>
<li>再输入一个多行公式</li>
</ul>

$$
\begin{array}{l}
z &= {(x + y)^2}\\
 &= {x^2} + {y^2} + 2xy
\end{array}
$$



<h4 id="问题1"><a href="#问题1" class="headerlink" title="问题1"></a>问题1</h4><ul>
<li>此时运行 <code>hexo g</code> 或<code>hexo s</code>有可能报错：</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Unhandled rejection Nunjucks Error:  [Line 11, Column 65] expected variable end</span><br><span class="line">    &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;               Context Dump               &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span><br><span class="line">    &#x3D;&#x3D;&#x3D; (line number probably different from source) &#x3D;&#x3D;&#x3D;</span><br></pre></td></tr></table></figure>

<h4 id="问题2"><a href="#问题2" class="headerlink" title="问题2"></a>问题2</h4><ul>
<li>或者显示公式不正常，多行公式会挤成一行：</li>
</ul>
<p><img src="https://photos.zywvvd.com/image_canglan/20201222003739.png"></p>
<h3 id="原因分析"><a href="#原因分析" class="headerlink" title="原因分析"></a>原因分析</h3><h4 id="问题1-1"><a href="#问题1-1" class="headerlink" title="问题1"></a>问题1</h4><ul>
<li>由于hexo解码时关注{{，}}，%% 等连续字符，会将这部分代码解读为其他带有特殊含义的内容</li>
<li>如果公式中恰巧出现了此类字符，会报出上述错误</li>
</ul>
<h4 id="问题2-1"><a href="#问题2-1" class="headerlink" title="问题2"></a>问题2</h4><ul>
<li>由于hexo在公式中的<code>\\</code>错会成了转义符，也就是说他只看见了一个反斜杠，不会执行换行命令，导致公式堆成一行</li>
</ul>
<h3 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h3><h4 id="临时方案"><a href="#临时方案" class="headerlink" title="临时方案"></a>临时方案</h4><h5 id="针对问题1"><a href="#针对问题1" class="headerlink" title="针对问题1"></a>针对问题1</h5><ul>
<li>可以在连续的 <code>{</code> <code>}</code> <code>%</code>中间插入空格，分开就没事了</li>
</ul>
<h5 id="针对问题2"><a href="#针对问题2" class="headerlink" title="针对问题2"></a>针对问题2</h5><ul>
<li>可以将<code>\\</code>换成<code>\\\\</code>，可以实现公式的多行正确显示</li>
</ul>
<h4 id="终极方案"><a href="#终极方案" class="headerlink" title="终极方案"></a>终极方案</h4><ul>
<li><p>在官方文档中提到了可以为hexo提供标记，阻止其按照自己的规则解释我们的字符串，显示其原本的含义</p>
</li>
<li><p>标记为 </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% raw %&#125;</span><br><span class="line">...</span><br><span class="line">&#123;% endraw %&#125;</span><br></pre></td></tr></table></figure>

</li>
</ul>
<link rel="stylesheet" href="/labiyouxiaoxin2.github.io/css/spoiler.css" type="text/css"><script src="/labiyouxiaoxin2.github.io/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo -14- 利用 Markdown 语法画 mermaid 流程图</title>
    <url>/2020/11/24/hexo/14_mermaid/mermaid/</url>
    <content><![CDATA[<blockquote>
<p>hexo默认不支持流程图，<a href="https://www.zywvvd.com/2020/11/23/hexo/13_flowchart/flowchart/" target="_blank" rel="noopener">flowchart</a>是一种简便好用的解决方案，但由于其语法过于简单，导致其在应付稍复杂一些的流程图时捉襟见肘，本文记录在hexo中添加Mermaid流程图的方法。</p>
</blockquote>
<a id="more"></a>

<h3 id="添加支持"><a href="#添加支持" class="headerlink" title="添加支持"></a>添加支持</h3><h4 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install --save hexo-filter-mermaid-diagrams</span><br></pre></td></tr></table></figure>

<h4 id="主题配置"><a href="#主题配置" class="headerlink" title="主题配置"></a>主题配置</h4><ul>
<li>在主题配置文件中找到<code>mermaid</code>选项，将<code>enable</code>设置为<code>true</code>。</li>
</ul>
<p><img src="https://photos.zywvvd.com/image_canglan/20201123235944.png"></p>
<h3 id="加入mermaid代码块"><a href="#加入mermaid代码块" class="headerlink" title="加入mermaid代码块"></a>加入mermaid代码块</h3><blockquote>
<p>官网有最全的说明文档 <a href="https://mermaidjs.github.io/" target="_blank" rel="noopener">https://mermaidjs.github.io/</a> ，此处记录常用使用方法。</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">graph TD</span><br><span class="line">    B((开始)) --&gt;C&#123;判断&#125;</span><br><span class="line">    C --  a&#x3D;1 --&gt;D[执行语句1]</span><br><span class="line">    C --  a&#x3D;2  --&gt;E[执行语句2]</span><br><span class="line">    C --  a&#x3D;3 --&gt;F[执行语句3]</span><br><span class="line">    C -- a&#x3D;4  --&gt;G[执行语句4]</span><br><span class="line">    D--&gt; AA((结束))</span><br><span class="line">    E--&gt; AA</span><br><span class="line">    F--&gt; AA</span><br><span class="line">   G--&gt; AA</span><br></pre></td></tr></table></figure>



<pre class="mermaid">graph TD
    B((开始)) -->C{判断}
    C --  a=1 -->D[执行语句1]
    C --  a=2  -->E[执行语句2]
    C --  a=3 -->F[执行语句3]
    C -- a=4  -->G[执行语句4]
    D--> AA((结束))
    E--> AA
    F--> AA
   G--> AA</pre>

<h3 id="流程图语法"><a href="#流程图语法" class="headerlink" title="流程图语法"></a>流程图语法</h3><h4 id="方向"><a href="#方向" class="headerlink" title="方向"></a>方向</h4><table>
<thead>
<tr>
<th>方向</th>
<th>含义</th>
</tr>
</thead>
<tbody><tr>
<td>TB</td>
<td>从上到下</td>
</tr>
<tr>
<td>BT</td>
<td>从下到上</td>
</tr>
<tr>
<td>RL</td>
<td>从右到左</td>
</tr>
<tr>
<td>LR</td>
<td>从左到右</td>
</tr>
<tr>
<td>TD</td>
<td>与TB相同</td>
</tr>
</tbody></table>
<h4 id="节点"><a href="#节点" class="headerlink" title="节点"></a>节点</h4><p>语法结构如下：<code>A[名称] --&gt; B(名称)</code><br>其中，A、B均代表形状名称，<code> --&gt;</code>表示箭头指向，形状样式用后面的括号来表示，括号里面的内容是形状中要显示的文本内容。其中有以下几种形状：</p>
<table>
<thead>
<tr>
<th>括号形式</th>
<th>形状样式</th>
</tr>
</thead>
<tbody><tr>
<td>[ ]</td>
<td>矩形框</td>
</tr>
<tr>
<td>( )</td>
<td>圆角矩形框</td>
</tr>
<tr>
<td>{ }</td>
<td>菱形</td>
</tr>
<tr>
<td>(( ))</td>
<td>圆形</td>
</tr>
</tbody></table>
<h4 id="连接线"><a href="#连接线" class="headerlink" title="连接线"></a>连接线</h4><table>
<thead>
<tr>
<th>符号</th>
<th>箭头</th>
</tr>
</thead>
<tbody><tr>
<td>–&gt;</td>
<td>箭头</td>
</tr>
<tr>
<td>—</td>
<td>没有箭头</td>
</tr>
<tr>
<td>– 文字 — /  — |文字|</td>
<td>带文字的连接线</td>
</tr>
<tr>
<td>–&gt;|文字| / – 文字 –&gt;</td>
<td>带箭头和文字的连接</td>
</tr>
<tr>
<td>-.-&gt;</td>
<td>虚线</td>
</tr>
<tr>
<td>-. 文字 .-&gt;</td>
<td>带文字的虚线连接</td>
</tr>
<tr>
<td>==&gt;</td>
<td>粗连接线</td>
</tr>
<tr>
<td>== 文本 ==&gt;</td>
<td>带文本的粗连接</td>
</tr>
</tbody></table>
<h4 id="子图"><a href="#子图" class="headerlink" title="子图"></a>子图</h4><p>语法：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">subgraph title</span><br><span class="line">    graph definition</span><br><span class="line">end</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">graph TB</span><br><span class="line">    c1--&gt;a2</span><br><span class="line">    subgraph one</span><br><span class="line">    a1--&gt;a2</span><br><span class="line">    end</span><br><span class="line">    subgraph two</span><br><span class="line">    b1--&gt;b2</span><br><span class="line">    end</span><br><span class="line">    subgraph three</span><br><span class="line">    c1--&gt;c2</span><br><span class="line">    end</span><br></pre></td></tr></table></figure>



<pre class="mermaid">graph TB
    c1-->a2
    subgraph one
    a1-->a2
    end
    subgraph two
    b1-->b2
    end
    subgraph three
    c1-->c2
    end</pre>

<h4 id="样式链接"><a href="#样式链接" class="headerlink" title="样式链接"></a>样式链接</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">graph LR</span><br><span class="line">    id1(Start)--&gt;id2(Stop)</span><br><span class="line">    style id1 fill:#f9f,stroke:#333,stroke-width:4px</span><br><span class="line">    style id2 fill:#ccf,stroke:#f66,stroke-width:2px,stroke-dasharray: 5, 5</span><br></pre></td></tr></table></figure>

<pre class="mermaid">graph LR
    id1(Start)-->id2(Stop)
    style id1 fill:#f9f,stroke:#333,stroke-width:4px
    style id2 fill:#ccf,stroke:#f66,stroke-width:2px,stroke-dasharray: 5, 5</pre>

<h4 id="综合应用"><a href="#综合应用" class="headerlink" title="综合应用"></a>综合应用</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">graph TB</span><br><span class="line">    id1(圆角矩形)--普通线--&gt;id2[矩形]</span><br><span class="line">    subgraph 子图表</span><br><span class="line">        id2&#x3D;&#x3D;粗线&#x3D;&#x3D;&gt;id3&#123;菱形&#125;</span><br><span class="line">        id3-.虚线.-&gt;id4&gt;右向旗帜]</span><br><span class="line">        id3--无箭头---id5((圆形))</span><br><span class="line">    end</span><br><span class="line">    style id1 fill:#f9f,stroke:#333,stroke-width:4px</span><br></pre></td></tr></table></figure>

<pre class="mermaid">graph TB
    id1(圆角矩形)--普通线-->id2[矩形]
    subgraph 子图表
        id2==粗线==>id3{菱形}
        id3-.虚线.->id4>右向旗帜]
        id3--无箭头---id5((圆形))
    end
    style id1 fill:#f9f,stroke:#333,stroke-width:4px</pre>

<h3 id="序列图语法"><a href="#序列图语法" class="headerlink" title="序列图语法"></a>序列图语法</h3><p>使用以下语法开始序列图</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sequenceDiagram</span><br><span class="line">    [参与者1][消息线][参与者2]:消息体</span><br><span class="line">    ...</span><br></pre></td></tr></table></figure>

<h4 id="参与者"><a href="#参与者" class="headerlink" title="参与者"></a>参与者</h4><p>定义参与者</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sequenceDiagram</span><br><span class="line">    participant 参与者 1</span><br><span class="line">    participant 参与者 2</span><br><span class="line">    ...</span><br><span class="line">    participant 简称 as 参与者 3 #该语法可以在接下来的描述中使用简称来代替参与者 312345</span><br></pre></td></tr></table></figure>

<h4 id="消息线"><a href="#消息线" class="headerlink" title="消息线"></a>消息线</h4><p>|类型|描述|<br>|<code>-&gt;</code>|无箭头的实线|<br>|<code>--&gt;</code>|无箭头的虚线|<br>|<code>-&gt;&gt;</code>|有箭头的实线|<br>|<code>--&gt;&gt;</code>|有箭头的虚线|<br>|<code>-x</code>|末端为叉的实线（表示异步）|<br>|<code>--x</code>|末端为叉的虚线（表示异步）|</p>
<h4 id="处理中"><a href="#处理中" class="headerlink" title="处理中"></a>处理中</h4><p>在消息线末尾增加 <code>+</code> ，则消息接收者进入当前消息的“处理中”状态；<br>在消息线末尾增加 <code>-</code> ，则消息接收者离开当前消息的“处理中”状态。</p>
<p>或者使用以下语法直接说明某个参与者进入“处理中”状态</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">activate 参与者1</span><br></pre></td></tr></table></figure>

<h4 id="标注"><a href="#标注" class="headerlink" title="标注"></a>标注</h4><p>语法如下</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Note 位置表述 参与者: 标注文字1</span><br></pre></td></tr></table></figure>

<p>其中位置表述可以为</p>
<table>
<thead>
<tr>
<th>表述</th>
<th>含义</th>
</tr>
</thead>
<tbody><tr>
<td>right of</td>
<td>右侧</td>
</tr>
<tr>
<td>left of</td>
<td>左侧</td>
</tr>
<tr>
<td>over</td>
<td>在当中，可以横跨多个参与者</td>
</tr>
</tbody></table>
<h4 id="循环"><a href="#循环" class="headerlink" title="循环"></a>循环</h4><p>语法如下</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">loop 循环的条件</span><br><span class="line">    循环体描述语句</span><br><span class="line">end123</span><br></pre></td></tr></table></figure>

<h4 id="判断"><a href="#判断" class="headerlink" title="判断"></a>判断</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">alt 条件 1 描述</span><br><span class="line">    分支 1 描述语句</span><br><span class="line">else 条件 2 描述 # else 分支可选</span><br><span class="line">    分支 2 描述语句</span><br><span class="line">else ...</span><br><span class="line">    ...</span><br><span class="line">end1234567</span><br></pre></td></tr></table></figure>

<p>如果遇到可选的情况，即没有 else 分支的情况，使用如下语法：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">opt 条件描述</span><br><span class="line">    分支描述语句</span><br><span class="line">end</span><br></pre></td></tr></table></figure>

<h4 id="综合应用-1"><a href="#综合应用-1" class="headerlink" title="综合应用"></a>综合应用</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sequenceDiagram</span><br><span class="line">    participant z as 张三</span><br><span class="line">    participant l as 李四</span><br><span class="line">    loop 日复一日</span><br><span class="line">        z-&gt;&gt;l: 吃了吗您呐？</span><br><span class="line">        l--&gt;&gt;z: 吃了，您呢？</span><br><span class="line">        activate z</span><br><span class="line">        Note left of z: 想了一下</span><br><span class="line">        alt 还没吃</span><br><span class="line">            z-xl: 还没呢，正准备回去吃</span><br><span class="line">        else 已经吃了</span><br><span class="line">            z-xl: 我也吃过了，哈哈</span><br><span class="line">        end</span><br><span class="line">        opt 大过年的</span><br><span class="line">            l--&gt;z: 祝您新年好啊</span><br><span class="line">        end</span><br><span class="line">    end</span><br></pre></td></tr></table></figure>

<pre class="mermaid">sequenceDiagram
    participant z as 张三
    participant l as 李四
    loop 日复一日
        z->>l: 吃了吗您呐？
        l-->>z: 吃了，您呢？
        activate z
        Note left of z: 想了一下
        alt 还没吃
            z-xl: 还没呢，正准备回去吃
        else 已经吃了
            z-xl: 我也吃过了，哈哈
        end
        opt 大过年的
            l-->z: 祝您新年好啊
        end
    end</pre>



<h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><ul>
<li><p><a href="https://mermaidjs.github.io/" target="_blank" rel="noopener">https://mermaidjs.github.io</a></p>
</li>
<li><p><a href="https://www.jianshu.com/p/af48cc77b57a" target="_blank" rel="noopener">https://www.jianshu.com/p/af48cc77b57a</a></p>
</li>
<li><p><a href="https://baijiahao.baidu.com/s?id=1641809867954032650&amp;wfr=spider&amp;for=pc" target="_blank" rel="noopener">https://baijiahao.baidu.com/s?id=1641809867954032650&amp;wfr=spider&amp;for=pc</a></p>
</li>
<li><p><a href="https://blog.csdn.net/fenghuizhidao/article/details/79440583" target="_blank" rel="noopener">https://blog.csdn.net/fenghuizhidao/article/details/79440583</a></p>
</li>
</ul>
<link rel="stylesheet" href="/labiyouxiaoxin2.github.io/css/spoiler.css" type="text/css"><script src="/labiyouxiaoxin2.github.io/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo -13- 利用 Markdown 语法画 flowchart 流程图</title>
    <url>/2020/11/23/hexo/13_flowchart/flowchart/</url>
    <content><![CDATA[<blockquote>
<p>hexo默认不支持流程图，flowchart 简便易食，可以瞬间使 hexo 流程图无中生有。本文记录在hexo中添加Markdown flowchart流程图的方法。</p>
</blockquote>
<a id="more"></a>

<h3 id="添加支持"><a href="#添加支持" class="headerlink" title="添加支持"></a>添加支持</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install --save hexo-filter-flowchart</span><br></pre></td></tr></table></figure>

<h3 id="添加Flow代码"><a href="#添加Flow代码" class="headerlink" title="添加Flow代码"></a>添加Flow代码</h3><ul>
<li>需要在代码块(ctrl + shift + k)中，选择语言为<code>flow</code>。</li>
</ul>
<p><img src="https://photos.zywvvd.com/image_canglan/20201123232520.png"></p>
<ul>
<li>添加flow代码：</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">st&#x3D;&gt;start: 开始节点</span><br><span class="line">in&#x3D;&gt;inputoutput: 输入</span><br><span class="line">e&#x3D;&gt;end: 结束节点</span><br><span class="line">op&#x3D;&gt;operation: 操作节点</span><br><span class="line">cond&#x3D;&gt;condition: 条件节点</span><br><span class="line">sub&#x3D;&gt;subroutine: 子例程</span><br><span class="line">out&#x3D;&gt;inputoutput: 输出</span><br><span class="line">st(right)-&gt;in-&gt;op-&gt;cond</span><br><span class="line">cond(yes,right)-&gt;out-&gt;e</span><br><span class="line">cond(no)-&gt;sub</span><br></pre></td></tr></table></figure>

<div id="flowchart-0" class="flow-chart"></div>

<h3 id="Flow-语法结构"><a href="#Flow-语法结构" class="headerlink" title="Flow 语法结构"></a>Flow 语法结构</h3><ul>
<li>语法概述</li>
</ul>
<blockquote>
<p>flow 语法其实是直截了当的，分为节点定义和节点连接两部分</p>
</blockquote>
<h4 id="节点定义"><a href="#节点定义" class="headerlink" title="节点定义"></a>节点定义</h4><ul>
<li>语法结构如下：<code>X=&gt;Y: Z</code><br>其中，X是变量名， Y是指操作模块名，冒号后面的Z是具体显示的文字内容。需要注意的是，冒号后要加空格才能识别，而<code>X</code>，<code>Y</code>与<code>=&gt;</code>之间不允许有空格。<br>其中，变量名X和文字内容Z可以比较随意设置，但是Y是有固定的内容，主要有以下几种：</li>
</ul>
<table>
<thead>
<tr>
<th>操作模块名</th>
<th>表示含义说明</th>
</tr>
</thead>
<tbody><tr>
<td>start</td>
<td>开始</td>
</tr>
<tr>
<td>end</td>
<td>结束</td>
</tr>
<tr>
<td>operation</td>
<td>普通操作块</td>
</tr>
<tr>
<td>subroutine</td>
<td>子任务块</td>
</tr>
<tr>
<td>condition</td>
<td>判断块</td>
</tr>
<tr>
<td>inputoutput</td>
<td>输入输出块</td>
</tr>
</tbody></table>
<h4 id="节点连接"><a href="#节点连接" class="headerlink" title="节点连接"></a>节点连接</h4><ul>
<li>定义语法节点后，需要理顺节点之间的关系，才能建立正确的流程图；</li>
<li>在flow中使用<code>-&gt;</code>符号连接两个前后的变量；</li>
<li>如： <code>a-&gt;b-&gt;c</code>，表示节点<code>a</code>转到<code>b</code>又到<code>c</code>节点；</li>
<li>上述转接也可以写成：</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">a-&gt;b</span><br><span class="line">b-&gt;c</span><br></pre></td></tr></table></figure>

<ul>
<li>condition是判断，可以取yes和no两种结果，对于不同结果可以有不同走向。如：<br><code>cond(yes)-&gt;out </code>表示condition成立时转向out执行；<br><code>cond(no)-&gt;op</code>表示condition不成立时转向op执行；</li>
</ul>
<h4 id="连接方向"><a href="#连接方向" class="headerlink" title="连接方向"></a>连接方向</h4><ul>
<li>连接线有上下左右四个方向，如果需要指定连接线连接到某一特定方向，在连接线开始的元素后面添加方向即可，方向包括：</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">(top)</span><br><span class="line">(bottom)</span><br><span class="line">(left)</span><br><span class="line">(right)</span><br></pre></td></tr></table></figure>

<ul>
<li>如果要设置条件框连接线方向，在括号中添加即可。条件框只有两个方向可供选择：</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># yes向下，no向右（默认）</span><br><span class="line"># yes向右，no向下。</span><br><span class="line">cond(yes,right)</span><br><span class="line">cond(no,bottom)</span><br></pre></td></tr></table></figure>

<blockquote>
<p>只需要指定其中一条分支的方向即可。</p>
</blockquote>
<h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><ul>
<li><p><a href="https://blog.csdn.net/wzh0709zml/article/details/103310405" target="_blank" rel="noopener">https://blog.csdn.net/wzh0709zml/article/details/103310405</a></p>
</li>
<li><p><a href="http://www.zhaojun.im/hexo-flowchart/" target="_blank" rel="noopener">http://www.zhaojun.im/hexo-flowchart/</a></p>
</li>
<li><p><a href="https://www.jianshu.com/p/f28c94cf1204" target="_blank" rel="noopener">https://www.jianshu.com/p/f28c94cf1204</a><script src="https://cdnjs.cloudflare.com/ajax/libs/raphael/2.2.7/raphael.min.js"></script><script src="https://cdnjs.cloudflare.com/ajax/libs/flowchart/1.6.5/flowchart.min.js"></script><textarea id="flowchart-0-code" style="display: none">st=>start: 开始节点
in=>inputoutput: 输入
e=>end: 结束节点
op=>operation: 操作节点
cond=>condition: 条件节点
sub=>subroutine: 子例程
out=>inputoutput: 输出
st(right)->in->op->cond
cond(yes,right)->out->e
cond(no)->sub</textarea><textarea id="flowchart-0-options" style="display: none">{"scale":1,"line-width":2,"line-length":50,"text-margin":10,"font-size":12}</textarea><script>  var code = document.getElementById("flowchart-0-code").value;  var options = JSON.parse(decodeURIComponent(document.getElementById("flowchart-0-options").value));  var diagram = flowchart.parse(code);  diagram.drawSVG("flowchart-0", options);</script></p>
</li>
</ul>
<link rel="stylesheet" href="/labiyouxiaoxin2.github.io/css/spoiler.css" type="text/css"><script src="/labiyouxiaoxin2.github.io/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo -12- 强制使用https协议</title>
    <url>/2020/03/28/hexo/12_force_https/force-https/</url>
    <content><![CDATA[<blockquote>
<p>https 是一种通过计算机网络进行安全通信的传输协议，经由HTTP进行通信，利用SSL/TLS建立全信道，加密数据包，相比与http更加安全。本文介绍Hexo博客强制用户https协议访问的方法。</p>
</blockquote>
<a id="more"></a>

<h2 id="修改-Pages-设置"><a href="#修改-Pages-设置" class="headerlink" title="修改 Pages 设置"></a>修改 Pages 设置</h2><blockquote>
<p>在hexo 挂载的pages中设置（例如我的是github pages），勾选 Enforce HTTPS</p>
</blockquote>
<p><img src="https://photos.zywvvd.com/image/20200329221359.png" alt="pages"></p>
<blockquote>
<p>此时用户访问您链接时必须使用https协议</p>
</blockquote>
<h2 id="CDN加速设置"><a href="#CDN加速设置" class="headerlink" title="CDN加速设置"></a>CDN加速设置</h2><blockquote>
<p>设置了CDN加速的同志也要在相应的控制台进行设置，不然可能会因为pages强制https，但CDN没有这样的要求，使用http协议访问你的加速域名，当转到源时发现协议不对，又跳转使用源的原始链接，导致CDN加速失效。</p>
<p>进入控制台（我的是七牛云，具体加速设置参考：<a href="https://www.zywvvd.com/2020/03/19/hexo/7_hexo_speed_up/hexo-speed-up/" target="_blank" rel="noopener">Hexo -7- Github源七牛云CDN加速教程（详细）</a>）-&gt; CDN -&gt; 域名管理 -&gt; 配置相应的域名</p>
</blockquote>
<p><img src="https://photos.zywvvd.com/image/20200329222035.png" alt="配置域名"></p>
<blockquote>
<p>修改Https配置</p>
</blockquote>
<p><img src="https://photos.zywvvd.com/image/20200329222136.png" alt="Https配置"></p>
<blockquote>
<p>开启强制https</p>
</blockquote>
<p><img src="https://photos.zywvvd.com/image/20200329222240.png" alt="强制https开关"></p>
<blockquote>
<p>配置完毕，用户只能用https访问你的站点了。</p>
</blockquote>
<p><img src="https://photos.zywvvd.com/image/20200329222408.png" alt="安全链接"></p>
<link rel="stylesheet" href="/labiyouxiaoxin2.github.io/css/spoiler.css" type="text/css"><script src="/labiyouxiaoxin2.github.io/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo -11- 修改网站Logo</title>
    <url>/2020/03/28/hexo/11_change_logo/change-logo/</url>
    <content><![CDATA[<blockquote>
<p> Next 主题默认的网站logo是字母N，本文介绍如何更换成自己的logo。</p>
</blockquote>
<a id="more"></a>

<h2 id="编辑logo图像文件"><a href="#编辑logo图像文件" class="headerlink" title="编辑logo图像文件"></a>编辑logo图像文件</h2><blockquote>
<p>Next主题logo一共四个：</p>
<ul>
<li>16×16 png</li>
<li>32×32 png</li>
<li>180×180 png</li>
<li>512 ×512 svn</li>
</ul>
</blockquote>
<blockquote>
<p>设计好自己的logo后在前三种尺寸下保存成png</p>
</blockquote>
<blockquote>
<p>在 <a href="https://c.runoob.com/more/svgeditor/" target="_blank" rel="noopener">https://c.runoob.com/more/svgeditor/</a> 可以设计自己的svg图像</p>
</blockquote>
<h2 id="修改主题配置文件"><a href="#修改主题配置文件" class="headerlink" title="修改主题配置文件"></a>修改主题配置文件</h2><blockquote>
<p>将图像放入 themes -&gt; next -&gt; source -&gt; images 文件夹下，修改主题配置文件</p>
</blockquote>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># Site Information Settings</span></span><br><span class="line"><span class="comment"># See: https://theme-next.org/docs/getting-started/</span></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="attr">favicon:</span></span><br><span class="line">  <span class="attr">small:</span> <span class="string">/images/logo-16.png</span></span><br><span class="line">  <span class="attr">medium:</span> <span class="string">/images/logo-32.png</span></span><br><span class="line">  <span class="attr">apple_touch_icon:</span> <span class="string">/images/logo-180.png</span></span><br><span class="line">  <span class="attr">safari_pinned_tab:</span> <span class="string">/images/logo-512.svg</span></span><br><span class="line">  <span class="comment">#android_manifest: /images/manifest.json</span></span><br><span class="line">  <span class="comment">#ms_browserconfig: /images/browserconfig.xml</span></span><br></pre></td></tr></table></figure>

<h2 id="效果示例"><a href="#效果示例" class="headerlink" title="效果示例"></a>效果示例</h2><p><img src="https://photos.zywvvd.com/image/20200329220315.png" alt="logo效果"></p>
<link rel="stylesheet" href="/labiyouxiaoxin2.github.io/css/spoiler.css" type="text/css"><script src="/labiyouxiaoxin2.github.io/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo -10- 使用PicGo配合七牛云图床实现Markdown图像无痛管理</title>
    <url>/2020/03/26/hexo/10_using_picgo/using-picgo/</url>
    <content><![CDATA[<blockquote>
<p> 在七牛云图床搭建好的情况下，我们可以有地方存放Markdown中的图像，而且速度很快，不占用Pages的空间，但是生成图像手动上传，名称管理实在是让人头疼。为了让图床管理不再反人类，PicGo应运而生，本文介绍PicGo结合七牛云管理Hexo图片的方法。</p>
</blockquote>
<a id="more"></a>

<h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><ul>
<li>Hexo博客搭建并挂载在服务器</li>
<li>申请七牛云并搭建好图床，方法参考<a href="https://www.zywvvd.com/2020/03/25/hexo/9_add_image_bed/add-image-bed/" target="_blank" rel="noopener">Hexo -9- 添加七牛云图床</a></li>
</ul>
<h2 id="工具下载"><a href="#工具下载" class="headerlink" title="工具下载"></a>工具下载</h2><ul>
<li><p>下载地址： <a href="https://github.com/Molunerfinn/PicGo/releases">https://github.com/Molunerfinn/PicGo/releases</a></p>
</li>
<li><p>当前最高版本 2.2.2</p>
</li>
<li><p>Windows 下载 <a href="https://github.com/Molunerfinn/PicGo/releases/download/v2.2.2/PicGo-Setup-2.2.2.exe">PicGo-Setup-2.2.2.exe</a></p>
</li>
<li><p>Max 下载 <a href="https://github.com/Molunerfinn/PicGo/releases/download/v2.2.2/PicGo-2.2.2-mac.zip">PicGo-2.2.2-mac.zip</a></p>
</li>
<li><p>Linux 下载 <a href="https://github.com/Molunerfinn/PicGo/releases/download/v2.2.2/PicGo-2.2.2.AppImage">PicGo-2.2.2.AppImage</a></p>
</li>
</ul>
<h2 id="AppImage"><a href="#AppImage" class="headerlink" title="AppImage"></a>AppImage</h2><blockquote>
<p>AppImage是个啥？</p>
<p>资料来源：<a href="https://blog.csdn.net/aboutmn/article/details/87254930" target="_blank" rel="noopener">https://blog.csdn.net/aboutmn/article/details/87254930</a></p>
</blockquote>
<ul>
<li><p>AppImage 使用通用的软件格式，通过将整个软件打包成AppImage,一个包包含了所有的功能. 并且几乎可以在所有的linux发行版本中使用。</p>
</li>
<li><p>通常我们安装linux软件将会在不同的目录生成多个文件，并且需要root权限来对系统进行修改。</p>
</li>
<li><p>AppImage 不需要这么做。事实上，AppImage 并不需要安装。AppImage 是一个压缩的镜像文件，它包含所有运行所需要的依赖和库文件。</p>
</li>
<li><p>你可以直接执行AppImage 文件不需要安装。当你把AppImage 文件删除，整个软件也被删除了。你可以把它当成windows系统中的那些免安装的exe文件。</p>
</li>
<li><p>优点：</p>
<ul>
<li>可以运行在各种平台</li>
<li>不需要安装，直接执行</li>
<li>不需要root权限，不需要修改系统文件</li>
<li>便携性：可以在位置执行</li>
<li>App 只读</li>
<li>卸载便利，只需要删除AppImage文件即可</li>
</ul>
</li>
<li><p>使用AppImage 文件</p>
<ul>
<li>下载AppImage 文件</li>
<li>赋予可执行权限</li>
<li>双击或者在命令行中执行</li>
</ul>
</li>
</ul>
<h2 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h2><blockquote>
<p>在程序中上传剪贴板图片需要用到xclip</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt install xclip</span><br></pre></td></tr></table></figure>



<h2 id="图床设置"><a href="#图床设置" class="headerlink" title="图床设置"></a>图床设置</h2><ul>
<li>运行程序，仔细找找，会发现桌面多了个蓝方块，不要慌乱，这就是PicGo</li>
</ul>
<p><img src="https://photos.zywvvd.com/image/20200326230922.png" alt="PicGo 迷你形态"></p>
<ul>
<li>在方块上右键 -&gt; 打开详细窗口 -&gt; 图床设置 -&gt; 七牛图床</li>
</ul>
<p><img src="https://photos.zywvvd.com/image/20200326231131.png" alt="七牛图床设置"></p>
<ul>
<li>其中AccessKey在七牛云控制台 -&gt; 头像 -&gt; 个人中心</li>
</ul>
<p><img src="https://photos.zywvvd.com/image/20200326231309.png" alt="个人中心"></p>
<ul>
<li>密钥管理中SecretKey保管好，这是私钥不宜外传</li>
</ul>
<p><img src="https://photos.zywvvd.com/image/20200326231405.png" alt="秘钥管理"></p>
<ul>
<li><p>存储空间名称为七牛云空间名称</p>
</li>
<li><p>访问网址为七牛云外链域名，我们已经在配置七牛云时设置成了空间加速域名</p>
</li>
<li><p>存储区域填写相应代号</p>
</li>
</ul>
<p><img src="https://photos.zywvvd.com/image/20200326231725.png" alt="存储区域代号"></p>
<ul>
<li>剩下两项根据个人情况填，但不建议填后缀，毕竟文件后缀都是根据图片改变的</li>
<li>确定 -&gt; 设置为默认图床，此时图床配置已经成功</li>
</ul>
<h2 id="其他设置"><a href="#其他设置" class="headerlink" title="其他设置"></a>其他设置</h2><blockquote>
<p>因为我们大多的应用场景是在Markdown中加入图片链接，我们更需要PicGo直接将图片链接编辑为Markdown支持的图片格式，但自带的Markdown格式不包含协议，不带https://，因此我们自己设置。</p>
</blockquote>
<ul>
<li>PicGo设置 -&gt; 自定义链接设置</li>
</ul>
<p><img src="https://photos.zywvvd.com/image/20200326232155.png" alt="自定义链接"></p>
<ul>
<li>设置格式为<code>![](https://$url)</code></li>
</ul>
<p><img src="https://photos.zywvvd.com/image/20200326232244.png" alt="自定义格式"></p>
<ul>
<li>同时建议设置成时间戳重命名，保证图片不会重复</li>
</ul>
<p><img src="https://photos.zywvvd.com/image/20200326232705.png"></p>
<ul>
<li>回到上传区 -&gt; 将链接格式改为 Custom，此后每次上传图片后会复制相应格式的链接到剪贴板</li>
</ul>
<p><img src="https://photos.zywvvd.com/image/20200326232447.png" alt="链接格式"></p>
<ul>
<li>PicGo设置 -&gt; 修改快捷键，将上传设置成自己的快捷键</li>
</ul>
<p><img src="https://photos.zywvvd.com/image/20200326232942.png" alt="快捷键"></p>
<h2 id="无痛添加图片流程"><a href="#无痛添加图片流程" class="headerlink" title="无痛添加图片流程"></a>无痛添加图片流程</h2><ul>
<li><p>从此以后我们添加图片的流程为：</p>
<ul>
<li>Ctrl+Alt+A 截图 -&gt; 画框 -&gt; 编号 -&gt; 马赛克 -&gt; 写字 -&gt; Enter将图片添加到剪贴板 （还没有这种体验的同学参考<a href="https://www.zywvvd.com/2020/02/24/software/recommend/ubuntu/flameshot/Ubuntu-flameshot/" target="_blank" rel="noopener">Ubuntu 软件<strong>推荐</strong> - 截图利器 flameshot-具有快捷键自由截图、截图涂鸦、截图添加文字等功能</a>）</li>
<li>Ctrl+Shift+Q 上传图片</li>
<li>Ctrl+V 粘贴链接</li>
</ul>
</li>
</ul>
<p><strong>舒服 。。。</strong></p>
<link rel="stylesheet" href="/labiyouxiaoxin2.github.io/css/spoiler.css" type="text/css"><script src="/labiyouxiaoxin2.github.io/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo -9- 添加七牛云图床</title>
    <url>/2020/03/25/hexo/9_add_image_bed/add-image-bed/</url>
    <content><![CDATA[<blockquote>
<p>Hexo 博客挂载在网页服务器上会出现图像加载缓慢、存储空间有限的问题，在各大网络加速运营商提供的图床服务可以有效解决此类问题，由于七牛云服务器物美价廉，还有免费10g空间，本文介绍使用七牛云作为Hexo图床的方法。</p>
</blockquote>
<a id="more"></a>

<h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><ul>
<li>已经准备好了Hexo博客并挂载在某个服务器</li>
<li>申请<a href="https://www.qiniu.com/" target="_blank" rel="noopener">七牛云</a>账号</li>
<li>申请域名并备案</li>
</ul>
<h2 id="创建七牛云空间"><a href="#创建七牛云空间" class="headerlink" title="创建七牛云空间"></a>创建七牛云空间</h2><blockquote>
<p>创建空间</p>
</blockquote>
<p><img src="https://photos.zywvvd.com/20200326000626.png" alt="创建空间"></p>
<blockquote>
<p>填写配置信息</p>
</blockquote>
<p><img src="https://photos.zywvvd.com/20200326001145.png" alt="配置信息"></p>
<blockquote>
<p>创建二级域名，例如我的 ：photos.zywvvd.com ，并申请相应的ssl证书，具体可参考<a href="https://www.zywvvd.com/2020/03/19/hexo/7_hexo_speed_up/hexo-speed-up/#%E7%94%B3%E8%AF%B7SSL%E5%85%8D%E8%B4%B9%E8%AF%81%E4%B9%A6%EF%BC%88%E8%B2%8C%E4%BC%BC%E5%8F%AF%E9%80%89%EF%BC%89" target="_blank" rel="noopener">SSL免费证书申请</a>。</p>
<p>配置加速域名：</p>
</blockquote>
<p><img src="https://photos.zywvvd.com/image/20200326001555.png"></p>
<blockquote>
<p>信息设置</p>
</blockquote>
<p><img src="https://photos.zywvvd.com/image/20200326002037.png" alt="配置其余信息"></p>
<blockquote>
<p>图床默认域名设置，将文件管理-&gt; 默认域名设置为我们加速的二级域名：</p>
</blockquote>
<p><img src="https://photos.zywvvd.com/image/20200326002404.png" alt="默认域名配置"></p>
<blockquote>
<p>域名运营商处将空间CNAME添加到加速二级域名的CNAME值中：</p>
</blockquote>
<p><img src="https://photos.zywvvd.com/image/20200326002718.png" alt="复制CNAME值"></p>
<p><img src="https://photos.zywvvd.com/image/20200326002829.png" alt="域名设置"></p>
<blockquote>
<p>此时七牛云空间CNAME验证成功，图床搭建完毕</p>
</blockquote>
<p><img src="https://photos.zywvvd.com/image/20200326002914.png" alt="配置成功"></p>
<blockquote>
<p>选择文件管理中的上传图片即可将图像放置到图床管理：</p>
</blockquote>
<p><img src="https://photos.zywvvd.com/image/20200326003021.png" alt="上传图片"></p>
<h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><blockquote>
<p>此时查看图片详情获取图像链接，在浏览器输入可以看到相应图像内容：</p>
</blockquote>
<p><img src="https://photos.zywvvd.com/image/20200326003133.png" alt="图像示例"></p>
<h2 id="进阶"><a href="#进阶" class="headerlink" title="进阶"></a>进阶</h2><blockquote>
<p>图床是博客图片长期管理的重要基石，但手动上传管理图像实在反人类，参考<a href="https://www.zywvvd.com/2020/03/26/hexo/10_using_picgo/using-picgo/" target="_blank" rel="noopener">Hexo -10- 使用PicGo配合七牛云图床实现Markdown图像无痛管理</a>有效解决图床图片管理的问题。</p>
</blockquote>
<link rel="stylesheet" href="/labiyouxiaoxin2.github.io/css/spoiler.css" type="text/css"><script src="/labiyouxiaoxin2.github.io/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo -8- 生成 sitemap 提交给Google、百度站长</title>
    <url>/2020/03/21/hexo/8_hexo_generate_sitemap/generate-sitemap/</url>
    <content><![CDATA[<blockquote>
<p> 为了成功引起搜索引擎的注意，我们主动生成供其抓取的文件，本文介绍hexo博客创建sitemap的方法。</p>
</blockquote>
<a id="more"></a>

<h2 id="生成Sitemap"><a href="#生成Sitemap" class="headerlink" title="生成Sitemap"></a>生成Sitemap</h2><h3 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h3><blockquote>
<p>安装普通 sitemap 和百度 sitemap 两种：</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install hexo-generator-sitemap --save</span><br><span class="line">npm install hexo-generator-baidu-sitemap --save</span><br></pre></td></tr></table></figure>

<h3 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h3><blockquote>
<p>修改站点配置文件，加入：</p>
</blockquote>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">plugins:</span> </span><br><span class="line">  <span class="string">hexo-generator-baidu-sitemap</span></span><br><span class="line">  <span class="string">hexo-generator-sitemap</span></span><br><span class="line"></span><br><span class="line"><span class="attr">baidusitemap:</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">baidusitemap.xml</span></span><br><span class="line"><span class="attr">sitemap:</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">sitemap.xml</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>确认站点配置中url和root的正确性，站点地图会根据url生成完整的链接</p>
</blockquote>
<h4 id="可选操作"><a href="#可选操作" class="headerlink" title="可选操作"></a>可选操作</h4><blockquote>
<p>修改Next 主题配置文件，打开菜单字段中的站点地图：</p>
</blockquote>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="attr">sitemap:</span> <span class="string">/sitemap.xml</span> <span class="string">||</span> <span class="string">sitemap</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>修改themes/next/languages/zh-Hans.yml，添加字段：</p>
</blockquote>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="attr">sitemap:</span> <span class="string">站点地图</span></span><br></pre></td></tr></table></figure>

<img src="/labiyouxiaoxin2.github.io/2020/03/21/hexo/8_hexo_generate_sitemap/generate-sitemap/side.png" class="" title="侧边栏站点地图按钮">

<h3 id="生成xml文件"><a href="#生成xml文件" class="headerlink" title="生成xml文件"></a>生成xml文件</h3><blockquote>
<p>生成Hexo站点，会在public文件夹中创建baidusitemap.xml 和 sitemap.xml文件</p>
</blockquote>
<img src="/labiyouxiaoxin2.github.io/2020/03/21/hexo/8_hexo_generate_sitemap/generate-sitemap/sitemap.png" class="" title="sitemap文件">

<blockquote>
<p> 在浏览器中输入 <a href="https://www.zywvvd.com/sitemap.xml" target="_blank" rel="noopener">https://www.zywvvd.com/sitemap.xml</a> 和 <a href="https://www.zywvvd.com/baidusitemap.xml" target="_blank" rel="noopener">https://www.zywvvd.com/baidusitemap.xml</a> 已经可以看到自己的站点地图了。</p>
</blockquote>
<h2 id="提交Google站长"><a href="#提交Google站长" class="headerlink" title="提交Google站长"></a>提交Google站长</h2><blockquote>
<p>有了sitemap比没有要更容易被收录，但是相比于主动提交给搜索引擎效率就差很多了，因此我们将生成的map先提交给google</p>
</blockquote>
<h3 id="查看站点是否被google收录"><a href="#查看站点是否被google收录" class="headerlink" title="查看站点是否被google收录"></a>查看站点是否被google收录</h3><blockquote>
<p>google搜索site:域名即可：</p>
</blockquote>
<img src="/labiyouxiaoxin2.github.io/2020/03/21/hexo/8_hexo_generate_sitemap/generate-sitemap/googlesite.png" class="" title="查询谷歌收录情况">

<h3 id="添加网址"><a href="#添加网址" class="headerlink" title="添加网址"></a>添加网址</h3><blockquote>
<p> 进入<a href="https://www.google.com/webmasters" target="_blank" rel="noopener">Google Search Console</a>，用谷歌账号登录，此时需要选择添加搜索的网址类型，我们申请的域名一般都是域级别的，比如我的 zywvvd.com ，可以建立不同前缀的二级域名，因此我们选择<code>网域</code>：</p>
</blockquote>
<img src="/labiyouxiaoxin2.github.io/2020/03/21/hexo/8_hexo_generate_sitemap/generate-sitemap/googleyanzheng.png" class="" title="添加网域">

<blockquote>
<p> 为防止恶意使用该功能，需要验证网域所有权，默认方式通过DNS验证，我们就用这种方法：</p>
</blockquote>
<img src="/labiyouxiaoxin2.github.io/2020/03/21/hexo/8_hexo_generate_sitemap/generate-sitemap/googleyz.png" class="" title="DNS验证">

<blockquote>
<p>将google提供的TXT添加到域名的@解析当中：</p>
</blockquote>
<img src="/labiyouxiaoxin2.github.io/2020/03/21/hexo/8_hexo_generate_sitemap/generate-sitemap/baiduyz.png" class="" title="添加TXT字段">

<blockquote>
<p>等一会点击验证即可通过：</p>
</blockquote>
<img src="/labiyouxiaoxin2.github.io/2020/03/21/hexo/8_hexo_generate_sitemap/generate-sitemap/chenggong.png" class="" title="完成验证">

<h3 id="添加站点地图"><a href="#添加站点地图" class="headerlink" title="添加站点地图"></a>添加站点地图</h3><blockquote>
<p>选择带前缀的地址 ：</p>
</blockquote>
<img src="/labiyouxiaoxin2.github.io/2020/03/21/hexo/8_hexo_generate_sitemap/generate-sitemap/www.png" class="" title="选择地址">

<blockquote>
<p>选择站点地图，并添加刚刚生成的sitemap.xml即可</p>
</blockquote>
<img src="/labiyouxiaoxin2.github.io/2020/03/21/hexo/8_hexo_generate_sitemap/generate-sitemap/zd.png" class="" title="站点地图">

<blockquote>
<p>可以看到站点地图解析成功：</p>
</blockquote>
<img src="/labiyouxiaoxin2.github.io/2020/03/21/hexo/8_hexo_generate_sitemap/generate-sitemap/googlechenggong.png" class="" title="添加成功">

<h2 id="提交百度站长"><a href="#提交百度站长" class="headerlink" title="提交百度站长"></a>提交百度站长</h2><blockquote>
<p>国内还是百度最好用了，我们也把地图给百度站长。</p>
<p>参考：<a href="https://zhuanlan.zhihu.com/p/100922816" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/100922816</a></p>
</blockquote>
<h3 id="查看网站是否被收录"><a href="#查看网站是否被收录" class="headerlink" title="查看网站是否被收录"></a>查看网站是否被收录</h3><blockquote>
<p>百度搜索 site: 域名可以查看</p>
</blockquote>
<img src="/labiyouxiaoxin2.github.io/2020/03/21/hexo/8_hexo_generate_sitemap/generate-sitemap/sousuo.png" class="" title="是否收录">

<h3 id="添加网址-1"><a href="#添加网址-1" class="headerlink" title="添加网址"></a>添加网址</h3><blockquote>
<p>百度提交<a href="https://ziyuan.baidu.com/site/index" target="_blank" rel="noopener">网址入口</a>，用百度账号登录后，还是添加网站的过程</p>
</blockquote>
<img src="/labiyouxiaoxin2.github.io/2020/03/21/hexo/8_hexo_generate_sitemap/generate-sitemap/tianjiabd.png" class="" title="百度添加网站">

<blockquote>
<p>补充个人信息后，来到第一步输入网站，建议为www前缀：</p>
</blockquote>
<img src="/labiyouxiaoxin2.github.io/2020/03/21/hexo/8_hexo_generate_sitemap/generate-sitemap/bdwangzhan.png" class="" title="录入网站">

<blockquote>
<p>第二步根据个人情况填写信息，每个月只能改一次，确定就好；</p>
<p>第三步选择我们已经熟悉的CNAME验证，根据给定的前缀建立解析，类型CNAME，值填 ziyuan.baidu.com</p>
</blockquote>
<img src="/labiyouxiaoxin2.github.io/2020/03/21/hexo/8_hexo_generate_sitemap/generate-sitemap/bdcname.png" class="" title="百度CNAME验证">

<blockquote>
<p>点击验证即可：</p>
</blockquote>
<img src="/labiyouxiaoxin2.github.io/2020/03/21/hexo/8_hexo_generate_sitemap/generate-sitemap/bdchenggong.png" class="" title="百度验证成功">

<h3 id="提交百度搜索的不同方式"><a href="#提交百度搜索的不同方式" class="headerlink" title="提交百度搜索的不同方式"></a>提交百度搜索的不同方式</h3><blockquote>
<p>百度提供了自动提交和手动提交两种方式，其中自动提交又分为主动推送、自动推送和 sitemap 三种方式，以下是官方给出的解释：</p>
</blockquote>
<ul>
<li>主动推送：最为快速的提交方式，推荐您将站点当天新产出链接立即通过此方式推送给百度，以保证新链接可以及时被百度收录</li>
<li>自动推送：是轻量级链接提交组件，将自动推送的 JS 代码放置在站点每一个页面源代码中，当页面被访问时，页面链接会自动推送给百度，有利于新页面更快被百度发现</li>
<li>sitemap：您可以定期将网站链接放到sitemap中，然后将sitemap提交给百度。百度会周期性的抓取检查您提交的sitemap，对其中的链接进行处理，但收录速度慢于主动推送</li>
<li>手动提交：如果您不想通过程序提交，那么可以采用此种方式，手动将链接提交给百度</li>
</ul>
<blockquote>
<p>四种提交方式对比：</p>
</blockquote>
<img src="/labiyouxiaoxin2.github.io/2020/03/21/hexo/8_hexo_generate_sitemap/generate-sitemap/zh.jpg" class="" title="提交方式对比">

<h3 id="主动推送"><a href="#主动推送" class="headerlink" title="主动推送"></a>主动推送</h3><h4 id="安装插件-1"><a href="#安装插件-1" class="headerlink" title="安装插件"></a>安装插件</h4><blockquote>
<p>安装插件：</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install hexo-baidu-url-submit --save</span><br></pre></td></tr></table></figure>

<h4 id="配置站点配置文件"><a href="#配置站点配置文件" class="headerlink" title="配置站点配置文件"></a>配置站点配置文件</h4><blockquote>
<p>向站点配置文件加入：</p>
</blockquote>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="attr">baidu_url_submit:</span></span><br><span class="line">  <span class="attr">count:</span> <span class="number">1</span>              <span class="comment"># 提交最新的多少个链接</span></span><br><span class="line">  <span class="attr">host:</span> <span class="string">www.zywvvd.com</span>    <span class="comment"># 在百度站长平台中添加的域名</span></span><br><span class="line">  <span class="attr">token:</span> <span class="string">YQlkVp*******</span>      <span class="comment"># 秘钥</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">baidu_urls.txt</span>   <span class="comment"># 文本文档的地址， 新链接会保存在此文本文档里</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>其中的 token 可以在【链接提交】-【自动提交】-【主动推送】下面看到，接口调用地址最后面 token=xxxxx 即为你的 token</p>
</blockquote>
<img src="/labiyouxiaoxin2.github.io/2020/03/21/hexo/8_hexo_generate_sitemap/generate-sitemap/token.png" class="" title="token">

<blockquote>
<p>加入新的deployer：</p>
</blockquote>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/deployment.html</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">git@github.com:zywvvd/zywvvd.github.io.git</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">master</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">type:</span> <span class="string">baidu_url_submitter</span></span><br></pre></td></tr></table></figure>

<h4 id="推送网址"><a href="#推送网址" class="headerlink" title="推送网址"></a>推送网址</h4><blockquote>
<p>此后每次hexo d都会将最新的1条网址推送给百度，而且成功时会有标识：</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">&#123;"remain":2997,"success":1&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>表示成功推送一条，今天还能推2997条。</p>
</blockquote>
<h3 id="自动推送"><a href="#自动推送" class="headerlink" title="自动推送"></a>自动推送</h3><blockquote>
<p>在网站中加入如下代码：</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&#123;% <span class="keyword">if</span> theme.baidu_push %&#125;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> bp = <span class="built_in">document</span>.createElement(<span class="string">'script'</span>);</span><br><span class="line">    <span class="keyword">var</span> curProtocol = <span class="built_in">window</span>.location.protocol.split(<span class="string">':'</span>)[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">if</span> (curProtocol === <span class="string">'https'</span>) &#123;</span><br><span class="line">        bp.src = <span class="string">'https://zz.bdstatic.com/linksubmit/push.js'</span>;        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        bp.src = <span class="string">'http://push.zhanzhang.baidu.com/push.js'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> s = <span class="built_in">document</span>.getElementsByTagName(<span class="string">"script"</span>)[<span class="number">0</span>];</span><br><span class="line">    s.parentNode.insertBefore(bp, s);</span><br><span class="line">&#125;)();</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&#123;% endif %&#125;</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>这段代码在Next主题中已经集成，在 7.7.1中，代码位于 themes/next/layout/_third-party/baidu-push.swig文件中，仅需修改主题配置文件即可：</p>
</blockquote>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Enable baidu push so that the blog will push the url to baidu automatically which is very helpful for SEO.</span></span><br><span class="line"><span class="attr">baidu_push:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>



<h3 id="提交Sitemap"><a href="#提交Sitemap" class="headerlink" title="提交Sitemap"></a>提交Sitemap</h3><blockquote>
<p>选择搜索服务的链接提交：</p>
</blockquote>
<img src="/labiyouxiaoxin2.github.io/2020/03/21/hexo/8_hexo_generate_sitemap/generate-sitemap/ljtj.png" class="" title="链接提交">

<blockquote>
<p>在自动提交- sitemap 中添加我们的sitemap链接即可：</p>
</blockquote>
<img src="/labiyouxiaoxin2.github.io/2020/03/21/hexo/8_hexo_generate_sitemap/generate-sitemap/bdst.png" class="" title="sitemap提交">

<link rel="stylesheet" href="/labiyouxiaoxin2.github.io/css/spoiler.css" type="text/css"><script src="/labiyouxiaoxin2.github.io/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo -7- Github源七牛云CDN加速教程（详细）</title>
    <url>/2020/03/19/hexo/7_hexo_speed_up/hexo-speed-up/</url>
    <content><![CDATA[<blockquote>
<p>Hexo使用Github Pages时存在加载缓慢的问题，国内很多CDN平台可以为网站提供加速服务，由于偶然的原因选择了<a href="https://portal.qiniu.com/" target="_blank" rel="noopener">七牛云</a>，可以免费生成SSL证书，http协议免费10g流量。但是网上相关教程并不友好，花了好多时间终于成功，在此将过程记录下来供后人参考。</p>
</blockquote>
<a id="more"></a>

<h2 id="需求描述"><a href="#需求描述" class="headerlink" title="需求描述"></a>需求描述</h2><blockquote>
<p>我的当前情况和需求：</p>
</blockquote>
<ul>
<li>已经申请了域名 zywvvd.com</li>
<li>服务器为国外的Github</li>
<li>正在使用Github分发的二级域名 zywvvd.github.io</li>
<li>已经将Hexo挂载到 <a href="http://www.zywvvd.com/" target="_blank" rel="noopener">www.zywvvd.com</a></li>
<li><strong>需要</strong> : 七牛云CDN加速站点，使得用户访问 <a href="http://www.zywvvd.com/" target="_blank" rel="noopener">www.zywvvd.com</a> 时速度快，而且顺利转到我的Hexo主页</li>
</ul>
<h2 id="CDN-Content-Delivery-Network-加速原理"><a href="#CDN-Content-Delivery-Network-加速原理" class="headerlink" title="CDN(Content Delivery Network)加速原理"></a>CDN(Content Delivery Network)加速原理</h2><blockquote>
<p>访问Github Pages缓慢的原因</p>
</blockquote>
<ul>
<li>服务器在国外，数据交互困难</li>
<li>客观因素无法改变，但是我们还是要求国内访问要快</li>
</ul>
<blockquote>
<p>CDN 原理</p>
</blockquote>
<ul>
<li>国内建立多个用于缓存静态页面的服务器</li>
<li>建立缓存区指向国外的站点，将其缓存到到国内的服务器</li>
<li>生成指向国内缓存的CANME（IP地址的别名）</li>
<li>将要加速的域名解析到上述CANME上，实现该域名访问时的加速</li>
</ul>
<h2 id="相关资料"><a href="#相关资料" class="headerlink" title="相关资料"></a>相关资料</h2><ul>
<li><p>测速网站1 ：<a href="http://www.webkaka.com/Ping.aspx" target="_blank" rel="noopener">http://www.webkaka.com/Ping.aspx</a></p>
</li>
<li><p>测速网站2：<a href="https://www.17ce.com/" target="_blank" rel="noopener">https://www.17ce.com/</a></p>
</li>
<li><p>教程1：<a href="%5Bhttps://geek-space.cn/post/hexo-qiniu.html#%E4%B8%8B%E9%9D%A2%E5%B0%B1%E6%98%AF%E6%95%99%E7%A8%8B%E4%BA%86%EF%BC%88%E8%BF%99%E9%87%8C%E5%81%87%E8%AE%BE%E6%82%A8%E5%B7%B2%E7%BB%8F%E6%8E%8C%E6%8F%A1%E4%BA%86%E5%BB%BA%E7%AB%99%E7%9A%84%E6%8A%80%E6%9C%AF%EF%BC%89%5D(https://geek-space.cn/post/hexo-qiniu.html#%E4%B8%8B%E9%9D%A2%E5%B0%B1%E6%98%AF%E6%95%99%E7%A8%8B%E4%BA%86%EF%BC%88%E8%BF%99%E9%87%8C%E5%81%87%E8%AE%BE%E6%82%A8%E5%B7%B2%E7%BB%8F%E6%8E%8C%E6%8F%A1%E4%BA%86%E5%BB%BA%E7%AB%99%E7%9A%84%E6%8A%80%E6%9C%AF%EF%BC%89)">Hexo 开启 CDN 加速访问</a></p>
</li>
<li><p>教程2：<a href="https://www.zhyong.cn/posts/ddf2/" target="_blank" rel="noopener">Hexo+Next 使用 CDN 加速网站以及静态文件</a></p>
</li>
<li><p>教程3：<a href="https://blog.csdn.net/zydarChen/article/details/89584937" target="_blank" rel="noopener">使用CDN加速你的博客</a></p>
</li>
</ul>
<h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><ul>
<li>Hexo建站成功并挂载在互联网</li>
<li>已经申请并备案自己的域名并成功绑定Hexo站点</li>
<li>申请<a href="https://portal.qiniu.com/" target="_blank" rel="noopener">七牛云</a>账号</li>
</ul>
<h2 id="加速教程"><a href="#加速教程" class="headerlink" title="加速教程"></a>加速教程</h2><blockquote>
<p>正片开始</p>
</blockquote>
<h3 id="重新解析站点到其他二级域名"><a href="#重新解析站点到其他二级域名" class="headerlink" title="重新解析站点到其他二级域名"></a>重新解析站点到其他二级域名</h3><blockquote>
<p>这里的其他是相对与前缀<code>www</code>来说的。</p>
<p>是这样的，因为我想来访者通过域名 <a href="http://www.zywvvd.com/" target="_blank" rel="noopener">www.zywvvd.com</a> 访问我的站点，也就是说这是我需要加速的域名，不能再把这个域名直接解析到我们的Hexo站点了，但是还是需要有一个二级域名指向他，因此需要将Hexo站点绑定到其他二级域名，我用的是 <a href="https://zzz.zywvvd.com/" target="_blank" rel="noopener">https://zzz.zywvvd.com/</a></p>
</blockquote>
<img src="/labiyouxiaoxin2.github.io/2020/03/19/hexo/7_hexo_speed_up/hexo-speed-up/cname.png" class="" title="源站CNAME设置">

<img src="/labiyouxiaoxin2.github.io/2020/03/19/hexo/7_hexo_speed_up/hexo-speed-up/jiexi.png" class="" title="添加新的二级域名解析">

<blockquote>
<p>此时可以通过 <a href="https://zzz.zywvvd.com/" target="_blank" rel="noopener">https://zzz.zywvvd.com/</a> 访问我的站点，但仍是原来的龟速</p>
</blockquote>
<img src="/labiyouxiaoxin2.github.io/2020/03/19/hexo/7_hexo_speed_up/hexo-speed-up/before.png" class="" title="加速前">

<h3 id="申请SSL免费证书（貌似可选）"><a href="#申请SSL免费证书（貌似可选）" class="headerlink" title="申请SSL免费证书（貌似可选）"></a>申请SSL免费证书（貌似可选）</h3><blockquote>
<p>SSL证书用于域名支持https协议，七牛云在http协议下每月提供10g免费流量，但是我不开启https就无法访问站点，所以申请了证书，需要每月流量费用0.28元/GB，对我来说一个月几块钱足够了。</p>
<p>建议提前申请证书，开通域名加速后再申请会提示不支持www开头的域名，但是直接申请可以发放。</p>
</blockquote>
<ul>
<li>进入七牛云控制台，选择SSL证书服务：</li>
</ul>
<img src="/labiyouxiaoxin2.github.io/2020/03/19/hexo/7_hexo_speed_up/hexo-speed-up/ssl.png" class="" title="SSL证书服务">

<ul>
<li>购买证书（别慌，免费的）</li>
</ul>
<img src="/labiyouxiaoxin2.github.io/2020/03/19/hexo/7_hexo_speed_up/hexo-speed-up/goumai.png" class="" title="购买证书">

<ul>
<li>选择TrustAsia DV 域名型</li>
</ul>
<img src="/labiyouxiaoxin2.github.io/2020/03/19/hexo/7_hexo_speed_up/hexo-speed-up/hedui.png" class="" title="选择域名类型">

<ul>
<li>点击核对信息并支付，确认支付即可</li>
</ul>
<img src="/labiyouxiaoxin2.github.io/2020/03/19/hexo/7_hexo_speed_up/hexo-speed-up/queren.png" class="" title="核对支付">

<ul>
<li>点击补全信息，填入站点域名、备注、企业和个人信息（信息仅用于此次注册）</li>
</ul>
<img src="/labiyouxiaoxin2.github.io/2020/03/19/hexo/7_hexo_speed_up/hexo-speed-up/buquan.png" class="" title="补全信息">

<ul>
<li>提交后需要DNS验证，在一级域名出建立指定的二级域名，记录类型设置为TXT，主机记录填入指定值，一会就会验证成功</li>
</ul>
<img src="/labiyouxiaoxin2.github.io/2020/03/19/hexo/7_hexo_speed_up/hexo-speed-up/dnsyz.png" class="" title="DNS验证">

<ul>
<li>等待一会就签发成功啦</li>
</ul>
<img src="/labiyouxiaoxin2.github.io/2020/03/19/hexo/7_hexo_speed_up/hexo-speed-up/qianfa.png" class="" title="签发SSL证书">

<h3 id="在Hexo添加测试文件"><a href="#在Hexo添加测试文件" class="headerlink" title="在Hexo添加测试文件"></a>在Hexo添加测试文件</h3><ul>
<li>所谓的测试文件就是随便一个小文件，放在Hexo/source文件夹下</li>
</ul>
<img src="/labiyouxiaoxin2.github.io/2020/03/19/hexo/7_hexo_speed_up/hexo-speed-up/test.png" class="" title="测试文件">

<ul>
<li>hexo g ，hexo d 后可以访问 zywvvd.github.io/test.html 查看</li>
</ul>
<img src="/labiyouxiaoxin2.github.io/2020/03/19/hexo/7_hexo_speed_up/hexo-speed-up/fangwentest.png" class="" title="访问测试文件">

<h3 id="添加CDN加速域名"><a href="#添加CDN加速域名" class="headerlink" title="添加CDN加速域名"></a>添加CDN加速域名</h3><ul>
<li>七牛云控制台，CDN，选择域名管理，添加域名</li>
</ul>
<img src="/labiyouxiaoxin2.github.io/2020/03/19/hexo/7_hexo_speed_up/hexo-speed-up/tianjia.png" class="" title="添加域名">

<ul>
<li>选择 普通域名 填写你要加速的域名（需要备案） 选择通信协议 https（我用http失败了）</li>
</ul>
<img src="/labiyouxiaoxin2.github.io/2020/03/19/hexo/7_hexo_speed_up/hexo-speed-up/yumingshezhi.png" class="" title="填入信息">

<ul>
<li><font color=red size=6 face='微软雅黑'>重点！！！</font></li>
</ul>
<blockquote>
<p>覆盖范围：按照个人需求设置</p>
<p>使用场景：动态加速</p>
<p>源站配置：源站填github分发的二级域名</p>
<p>回源Host：填之前我们移动的二级域名，比如我的是 zzz.zywvvd.com/ </p>
<p>源站测试：填入刚刚的test.html，点击测试</p>
</blockquote>
<img src="/labiyouxiaoxin2.github.io/2020/03/19/hexo/7_hexo_speed_up/hexo-speed-up/yuanzhan.png" class="" title="源站配置">

<ul>
<li>其他根据个人需求配置，没特殊要求默认即可，等待一会即提示成功建立加速域名</li>
</ul>
<h3 id="添加七牛云CNAME解析"><a href="#添加七牛云CNAME解析" class="headerlink" title="添加七牛云CNAME解析"></a>添加七牛云CNAME解析</h3><ul>
<li>此时配置刚刚建立的域名，会提示你需要配置CNAME</li>
</ul>
<img src="/labiyouxiaoxin2.github.io/2020/03/19/hexo/7_hexo_speed_up/hexo-speed-up/tishi.png" class="" title="提示">

<ul>
<li>返回域名管理，复制CNAME</li>
</ul>
<img src="/labiyouxiaoxin2.github.io/2020/03/19/hexo/7_hexo_speed_up/hexo-speed-up/cn.png" class="" title="复制CNAME">

<ul>
<li>在域名商处添加加速前缀的二级域名，解析到上述CNAME</li>
</ul>
<img src="/labiyouxiaoxin2.github.io/2020/03/19/hexo/7_hexo_speed_up/hexo-speed-up/jie.png" class="" title="配置CNAME">

<h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><blockquote>
<p>此时我们已经完成了：</p>
</blockquote>
<ul>
<li>加速域名 → 七牛云CNAME → 备用二级域名 → Gtihub二级域名 → 站点服务器</li>
</ul>
<blockquote>
<p>可以用dig 命令测试 ，见到七牛云的CNAME解析就可以了:</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">dig www.zywvvd.com</span><br></pre></td></tr></table></figure>

<img src="/labiyouxiaoxin2.github.io/2020/03/19/hexo/7_hexo_speed_up/hexo-speed-up/dig.png" class="" title="dig测试">

<blockquote>
<p>最实在的当然还是测速了</p>
</blockquote>
<img src="/labiyouxiaoxin2.github.io/2020/03/19/hexo/7_hexo_speed_up/hexo-speed-up/after.png" class="" title="网速测试">

<blockquote>
<p>舒服。。。</p>
</blockquote>
<link rel="stylesheet" href="/labiyouxiaoxin2.github.io/css/spoiler.css" type="text/css"><script src="/labiyouxiaoxin2.github.io/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo -6- FontAwesome 4.7.0 中完整的675个图标样式CSS参考</title>
    <url>/2020/03/09/hexo/6_hexo_icons/hexo-icons/</url>
    <content><![CDATA[<blockquote>
<p>Hexo 支持FontAwesome图标，就是在代码中出现名字以<code>fa fa</code>开头的类名，本文介绍具具体图标来源和使用方法。</p>
</blockquote>
<a id="more"></a>

<h2 id="图标列表"><a href="#图标列表" class="headerlink" title="图标列表"></a>图标列表</h2><blockquote>
<p><a href="https://9iphp.com/fa-icons" target="_blank" rel="noopener">官方链接</a></p>
</blockquote>
<h3 id="New-Icons-in-4-7"><a href="#New-Icons-in-4-7" class="headerlink" title="New Icons in 4.7"></a>New Icons in 4.7</h3><img src="/labiyouxiaoxin2.github.io/2020/03/09/hexo/6_hexo_icons/hexo-icons/1.png" class="" title="New-Icons-in-4.7">

<h3 id="Web-Application-Icons"><a href="#Web-Application-Icons" class="headerlink" title="Web Application Icons"></a>Web Application Icons</h3><img src="/labiyouxiaoxin2.github.io/2020/03/09/hexo/6_hexo_icons/hexo-icons/2.png" class="" title="Web-Application-Icons">

<img src="/labiyouxiaoxin2.github.io/2020/03/09/hexo/6_hexo_icons/hexo-icons/3.png" class="" title="Web-Application-Icons">

<img src="/labiyouxiaoxin2.github.io/2020/03/09/hexo/6_hexo_icons/hexo-icons/4.png" class="" title="Web-Application-Icons">

<img src="/labiyouxiaoxin2.github.io/2020/03/09/hexo/6_hexo_icons/hexo-icons/5.png" class="" title="Web-Application-Icons">

<img src="/labiyouxiaoxin2.github.io/2020/03/09/hexo/6_hexo_icons/hexo-icons/6.png" class="" title="Web-Application-Icons">

<h3 id="Accessibility-Icons"><a href="#Accessibility-Icons" class="headerlink" title="Accessibility Icons"></a>Accessibility Icons</h3><img src="/labiyouxiaoxin2.github.io/2020/03/09/hexo/6_hexo_icons/hexo-icons/7.png" class="" title="Accessibility-Icons">

<h3 id="Hand-Icons"><a href="#Hand-Icons" class="headerlink" title="Hand Icons"></a>Hand Icons</h3><img src="/labiyouxiaoxin2.github.io/2020/03/09/hexo/6_hexo_icons/hexo-icons/8.png" class="" title="Hand-Icons">

<h3 id="Transportation-Icons"><a href="#Transportation-Icons" class="headerlink" title="Transportation Icons"></a>Transportation Icons</h3><img src="/labiyouxiaoxin2.github.io/2020/03/09/hexo/6_hexo_icons/hexo-icons/9.png" class="" title="Transportation-Icons">

<h3 id="Gender-Icons"><a href="#Gender-Icons" class="headerlink" title="Gender Icons"></a>Gender Icons</h3><img src="/labiyouxiaoxin2.github.io/2020/03/09/hexo/6_hexo_icons/hexo-icons/10.png" class="" title="Gender-Icons">

<h3 id="File-Type-Icons"><a href="#File-Type-Icons" class="headerlink" title="File Type Icons"></a>File Type Icons</h3><img src="/labiyouxiaoxin2.github.io/2020/03/09/hexo/6_hexo_icons/hexo-icons/11.png" class="" title="File-Type-Icons">

<h3 id="Spinner-Icons"><a href="#Spinner-Icons" class="headerlink" title="Spinner Icons"></a>Spinner Icons</h3><img src="/labiyouxiaoxin2.github.io/2020/03/09/hexo/6_hexo_icons/hexo-icons/12.png" class="" title="Spinner-Icons">

<h3 id="Form-Control-Icons"><a href="#Form-Control-Icons" class="headerlink" title="Form Control Icons"></a>Form Control Icons</h3><img src="/labiyouxiaoxin2.github.io/2020/03/09/hexo/6_hexo_icons/hexo-icons/13.png" class="" title="Form-Control-Icons">

<h3 id="Payment-Icons"><a href="#Payment-Icons" class="headerlink" title="Payment Icons"></a>Payment Icons</h3><img src="/labiyouxiaoxin2.github.io/2020/03/09/hexo/6_hexo_icons/hexo-icons/14.png" class="" title="Payment-Icons">

<h3 id="Chart-Icons"><a href="#Chart-Icons" class="headerlink" title="Chart Icons"></a>Chart Icons</h3><img src="/labiyouxiaoxin2.github.io/2020/03/09/hexo/6_hexo_icons/hexo-icons/15.png" class="" title="Chart-Icons">

<h3 id="Currency-Icons"><a href="#Currency-Icons" class="headerlink" title="Currency Icons"></a>Currency Icons</h3><img src="/labiyouxiaoxin2.github.io/2020/03/09/hexo/6_hexo_icons/hexo-icons/16.png" class="" title="Currency-Icons">

<h3 id="Text-Editor-Icons"><a href="#Text-Editor-Icons" class="headerlink" title="Text Editor Icons"></a>Text Editor Icons</h3><img src="/labiyouxiaoxin2.github.io/2020/03/09/hexo/6_hexo_icons/hexo-icons/17.png" class="" title="Text-Editor-Icons">

<h3 id="Directional-Icons"><a href="#Directional-Icons" class="headerlink" title="Directional Icons"></a>Directional Icons</h3><img src="/labiyouxiaoxin2.github.io/2020/03/09/hexo/6_hexo_icons/hexo-icons/18.png" class="" title="Directional-Icons">

<h3 id="Video-Player-Icons"><a href="#Video-Player-Icons" class="headerlink" title="Video Player Icons"></a>Video Player Icons</h3><img src="/labiyouxiaoxin2.github.io/2020/03/09/hexo/6_hexo_icons/hexo-icons/19.png" class="" title="Video-Player-Icons">

<h3 id="Brand-Icons"><a href="#Brand-Icons" class="headerlink" title="Brand Icons"></a>Brand Icons</h3><img src="/labiyouxiaoxin2.github.io/2020/03/09/hexo/6_hexo_icons/hexo-icons/20.png" class="" title="Brand-Icons">

<img src="/labiyouxiaoxin2.github.io/2020/03/09/hexo/6_hexo_icons/hexo-icons/21.png" class="" title="Brand-Icons">

<img src="/labiyouxiaoxin2.github.io/2020/03/09/hexo/6_hexo_icons/hexo-icons/22.png" class="" title="Brand-Icons">

<h3 id="Medical-Icons"><a href="#Medical-Icons" class="headerlink" title="Medical Icons"></a>Medical Icons</h3><img src="/labiyouxiaoxin2.github.io/2020/03/09/hexo/6_hexo_icons/hexo-icons/23.png" class="" title="Medical-Icons">

<h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><blockquote>
<p>首先引入CSS文件：<link href="https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css" rel="stylesheet"></p>
<p>在Hexo中不需要手动引入，可以直接使用。</p>
<p>用</p>
</blockquote>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-XXXX"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>输出图标<br>比如在hexo文章中添加代码</p>
</blockquote>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"fa fa-home"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><span class="fa fa-home"></span></p>
<blockquote>
<p> 可输出 <code>家</code> 图标</p>
</blockquote>
<link rel="stylesheet" href="/labiyouxiaoxin2.github.io/css/spoiler.css" type="text/css"><script src="/labiyouxiaoxin2.github.io/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo -5- 添加 live2d 看板动画</title>
    <url>/2020/03/09/hexo/5_hexo_add_live2d/add-live2d/</url>
    <content><![CDATA[<blockquote>
<p>live2d是一种应用于电子游戏的绘图渲染技术，技术由日本Cybernoids公司开发。通过一系列的连续图像和人物建模来生成一种类似三维模型的二维图像。 在Hexo中生成可以与用户互动的卡通人物，简直就是博客的灵魂所在。本文介绍live2d 看板动画添加方法。</p>
</blockquote>
<a id="more"></a>

<h2 id="安装-hexo-helper-live2d"><a href="#安装-hexo-helper-live2d" class="headerlink" title="安装 hexo-helper-live2d"></a>安装 hexo-helper-live2d</h2><blockquote>
<p>官网链接 <a href="https://github.com/EYHN/hexo-helper-live2d/blob/HEAD/README.zh-CN.md">hexo-helper-live2d Github 官方链接</a></p>
<p>安装时需要在 Hexo 工程目录下输入命令：</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install --save hexo-helper-live2d</span><br></pre></td></tr></table></figure>

<h2 id="挑选喜欢的模型"><a href="#挑选喜欢的模型" class="headerlink" title="挑选喜欢的模型"></a>挑选喜欢的模型</h2><blockquote>
<p>基础的live2d模型有很多，挑选你喜欢的记录下他的名字：</p>
</blockquote>
<h3 id="chitose"><a href="#chitose" class="headerlink" title="chitose"></a>chitose</h3><img src="/labiyouxiaoxin2.github.io/2020/03/09/hexo/5_hexo_add_live2d/add-live2d/chitose.png" class="" title="chitose">

<h3 id="epsilon2-1"><a href="#epsilon2-1" class="headerlink" title="epsilon2_1"></a>epsilon2_1</h3><img src="/labiyouxiaoxin2.github.io/2020/03/09/hexo/5_hexo_add_live2d/add-live2d/epsilon2_1.png" class="" title="epsilon2_1">

<h3 id="gf"><a href="#gf" class="headerlink" title="gf"></a>gf</h3><img src="/labiyouxiaoxin2.github.io/2020/03/09/hexo/5_hexo_add_live2d/add-live2d/gf.png" class="" title="gf">

<h3 id="haru-01"><a href="#haru-01" class="headerlink" title="haru/01"></a>haru/01</h3><img src="/labiyouxiaoxin2.github.io/2020/03/09/hexo/5_hexo_add_live2d/add-live2d/haru01.png" class="" title="haru-01">

<h3 id="haru-02"><a href="#haru-02" class="headerlink" title="haru/02"></a>haru/02</h3><img src="/labiyouxiaoxin2.github.io/2020/03/09/hexo/5_hexo_add_live2d/add-live2d/haru02.png" class="" title="haru-02">

<h3 id="haruto"><a href="#haruto" class="headerlink" title="haruto"></a>haruto</h3><img src="/labiyouxiaoxin2.github.io/2020/03/09/hexo/5_hexo_add_live2d/add-live2d/haruto.png" class="" title="haruto">

<h3 id="hibiki"><a href="#hibiki" class="headerlink" title="hibiki"></a>hibiki</h3><img src="/labiyouxiaoxin2.github.io/2020/03/09/hexo/5_hexo_add_live2d/add-live2d/hibiki.png" class="" title="hibiki">

<h3 id="hijiki"><a href="#hijiki" class="headerlink" title="hijiki"></a>hijiki</h3><img src="/labiyouxiaoxin2.github.io/2020/03/09/hexo/5_hexo_add_live2d/add-live2d/hijiki.png" class="" title="hijiki">

<h3 id="izumi"><a href="#izumi" class="headerlink" title="izumi"></a>izumi</h3><img src="/labiyouxiaoxin2.github.io/2020/03/09/hexo/5_hexo_add_live2d/add-live2d/izumi.png" class="" title="izumi">

<h3 id="koharu"><a href="#koharu" class="headerlink" title="koharu"></a>koharu</h3><img src="/labiyouxiaoxin2.github.io/2020/03/09/hexo/5_hexo_add_live2d/add-live2d/koharu.png" class="" title="koharu">

<h3 id="miku"><a href="#miku" class="headerlink" title="miku"></a>miku</h3><img src="/labiyouxiaoxin2.github.io/2020/03/09/hexo/5_hexo_add_live2d/add-live2d/miku.png" class="" title="miku">

<h3 id="nico"><a href="#nico" class="headerlink" title="nico"></a>nico</h3><img src="/labiyouxiaoxin2.github.io/2020/03/09/hexo/5_hexo_add_live2d/add-live2d/nico.png" class="" title="nico">

<h3 id="nietzsche"><a href="#nietzsche" class="headerlink" title="nietzsche"></a>nietzsche</h3><img src="/labiyouxiaoxin2.github.io/2020/03/09/hexo/5_hexo_add_live2d/add-live2d/nietzsche.png" class="" title="nietzsche">

<h3 id="ni-j"><a href="#ni-j" class="headerlink" title="ni-j"></a>ni-j</h3><img src="/labiyouxiaoxin2.github.io/2020/03/09/hexo/5_hexo_add_live2d/add-live2d/ni-j.png" class="" title="ni-j">

<h3 id="nipsilon"><a href="#nipsilon" class="headerlink" title="nipsilon"></a>nipsilon</h3><img src="/labiyouxiaoxin2.github.io/2020/03/09/hexo/5_hexo_add_live2d/add-live2d/nipsilon.png" class="" title="nipsilon">

<h3 id="nito"><a href="#nito" class="headerlink" title="nito"></a>nito</h3><img src="/labiyouxiaoxin2.github.io/2020/03/09/hexo/5_hexo_add_live2d/add-live2d/nito.png" class="" title="nito">

<h3 id="shizuku"><a href="#shizuku" class="headerlink" title="shizuku"></a>shizuku</h3><img src="/labiyouxiaoxin2.github.io/2020/03/09/hexo/5_hexo_add_live2d/add-live2d/shizuku.png" class="" title="shizuku">

<h3 id="tororo"><a href="#tororo" class="headerlink" title="tororo"></a>tororo</h3><img src="/labiyouxiaoxin2.github.io/2020/03/09/hexo/5_hexo_add_live2d/add-live2d/tororo.png" class="" title="tororo">

<h3 id="tsumiki"><a href="#tsumiki" class="headerlink" title="tsumiki"></a>tsumiki</h3><img src="/labiyouxiaoxin2.github.io/2020/03/09/hexo/5_hexo_add_live2d/add-live2d/tsumiki.png" class="" title="tsumiki">

<h3 id="unitychan"><a href="#unitychan" class="headerlink" title="unitychan"></a>unitychan</h3><img src="/labiyouxiaoxin2.github.io/2020/03/09/hexo/5_hexo_add_live2d/add-live2d/unitychan.png" class="" title="unitychan">

<h3 id="wanko"><a href="#wanko" class="headerlink" title="wanko"></a>wanko</h3><img src="/labiyouxiaoxin2.github.io/2020/03/09/hexo/5_hexo_add_live2d/add-live2d/wanko.png" class="" title="wanko">

<h3 id="z16"><a href="#z16" class="headerlink" title="z16"></a>z16</h3><img src="/labiyouxiaoxin2.github.io/2020/03/09/hexo/5_hexo_add_live2d/add-live2d/z16.png" class="" title="z16">

<h2 id="模型下载"><a href="#模型下载" class="headerlink" title="模型下载"></a>模型下载</h2><h3 id="命令行"><a href="#命令行" class="headerlink" title="命令行"></a>命令行</h3><blockquote>
<p>在hexo目录中输入命令：</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install --save live2d-widget-model-`模型名字`</span><br></pre></td></tr></table></figure>

<blockquote>
<p> 此时在<code>hexo根目录</code>/node_modules/ 文件夹中增加 ‘ live2d-widget-model-<code>模型名字</code> ‘ 文件夹</p>
</blockquote>
<img src="/labiyouxiaoxin2.github.io/2020/03/09/hexo/5_hexo_add_live2d/add-live2d/new_dir.png" class="" title="新增文件夹">



<h3 id="github下载"><a href="#github下载" class="headerlink" title="github下载"></a>github下载</h3><blockquote>
<p>上述列表模型<a href="https://github.com/xiazeyu/live2d-widget-models"> github地址 </a> </p>
<p>新模型 <a href="https://github.com/summerscar/live2dDemo">gtihub地址</a></p>
<p>可以下载模型放在<code>hexo根目录</code>/node_modules/ 文件夹中，以达到命令行安装的效果</p>
</blockquote>
<h2 id="模型应用配置"><a href="#模型应用配置" class="headerlink" title="模型应用配置"></a>模型应用配置</h2><blockquote>
<p>在<code>站点配置文件</code>中加入配置信息：</p>
</blockquote>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">live2d:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">scriptFrom:</span> <span class="string">local</span></span><br><span class="line">  <span class="attr">pluginRootPath:</span> <span class="string">live2dw/</span></span><br><span class="line">  <span class="attr">pluginJsPath:</span> <span class="string">lib/</span></span><br><span class="line">  <span class="attr">pluginModelPath:</span> <span class="string">assets/</span></span><br><span class="line">  <span class="attr">tagMode:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">log:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">model:</span></span><br><span class="line">    <span class="attr">use:</span> <span class="string">live2d-widget-model-&lt;模型名字&gt;</span></span><br><span class="line">  <span class="attr">display:</span></span><br><span class="line">    <span class="attr">position:</span> <span class="string">right</span>  <span class="comment"># left</span></span><br><span class="line">    <span class="attr">width:</span> <span class="number">220</span></span><br><span class="line">    <span class="attr">height:</span> <span class="number">440</span></span><br><span class="line">  <span class="attr">mobile:</span></span><br><span class="line">    <span class="attr">show:</span> <span class="literal">true</span>   <span class="comment">#是否在手机进行显示</span></span><br><span class="line">  <span class="attr">react:</span></span><br><span class="line">    <span class="attr">opacity:</span> <span class="number">0.7</span></span><br></pre></td></tr></table></figure>

<h2 id="haru"><a href="#haru" class="headerlink" title="haru"></a>haru</h2><blockquote>
<p>haru 和其他模型有些不同，haru包中包含 01 / 02 两个模型，在使用时模型名字为：</p>
</blockquote>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">model:</span></span><br><span class="line">  <span class="attr">use:</span> <span class="string">live2d-widget-model-haru/01</span></span><br></pre></td></tr></table></figure>

<p>或</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">model:</span></span><br><span class="line">  <span class="attr">use:</span> <span class="string">live2d-widget-model-haru/02</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>此时模型仍然无法正确加载，因为<code>hexo根目录</code>/node_modules/live2d-widget-model-haru/01/或02/ 中的json文件是空的，所以需要把<code>hexo根目录</code>/node_modules/live2d-widget-model-haru/中的json文件复制到01/或02/文件夹中。</p>
</blockquote>
<h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><blockquote>
<p>输入命令：</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo s</span><br></pre></td></tr></table></figure>

<blockquote>
<p>在<code>http://127.0.0.1:4000/</code>查看测试结果 (示例为z16)</p>
</blockquote>
<img src="/labiyouxiaoxin2.github.io/2020/03/09/hexo/5_hexo_add_live2d/add-live2d/test.png" class="" title="示例效果">

<h2 id="加强版（可以说话、互动）"><a href="#加强版（可以说话、互动）" class="headerlink" title="加强版（可以说话、互动）"></a>加强版（可以说话、互动）</h2><blockquote>
<p><a href="https://github.com/stevenjoezhang/live2d-widget">优化版live2d-widget</a></p>
</blockquote>
<blockquote>
<p>具体方法参考</p>
<p><a href="https://blog.csdn.net/weixin_34235371/article/details/91468588" target="_blank" rel="noopener">https://blog.csdn.net/weixin_34235371/article/details/91468588</a></p>
<p> <a href="https://blog.csdn.net/cungudafa/article/details/104282643#_47" target="_blank" rel="noopener">https://blog.csdn.net/cungudafa/article/details/104282643#_47</a></p>
</blockquote>
<link rel="stylesheet" href="/labiyouxiaoxin2.github.io/css/spoiler.css" type="text/css"><script src="/labiyouxiaoxin2.github.io/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo -4- 向文章添加图片的方法</title>
    <url>/2020/02/27/hexo/4_hexo_add_image/hexo-add-image/</url>
    <content><![CDATA[<blockquote>
<p>本文介绍Hexo编辑文章时添加图像的各种方法。</p>
</blockquote>
<a id="more"></a>

<h2 id="绝对路径本地引用"><a href="#绝对路径本地引用" class="headerlink" title="绝对路径本地引用"></a>绝对路径本地引用</h2><blockquote>
<p>当Hexo项目中只用到少量图片时，可以将图片统一放在source/images文件夹中，通过markdown语法访问它们。</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">![](&#x2F;images&#x2F;image.jpg)</span><br></pre></td></tr></table></figure>

<blockquote>
<p>此方法加载的图片既可以在首页内容中访问到，也可以在文章正文中访问到。</p>
</blockquote>
<h2 id="相对路径本地引用"><a href="#相对路径本地引用" class="headerlink" title="相对路径本地引用"></a>相对路径本地引用</h2><blockquote>
<p>图片除了可以放在统一的images文件夹中，还可以放在文章自己的目录中。文章的目录可以通过设置<code>站点配置文件</code>的 <code>post_asset_folder: true</code>来自动生成。</p>
</blockquote>
<img src="/labiyouxiaoxin2.github.io/2020/02/27/hexo/4_hexo_add_image/hexo-add-image/config.png" class="" title="配置文件修改">

<blockquote>
<p>将_config.yml文件中的配置项post_asset_folder设为true后，执行命令$ hexo new post_name，在source/_posts中会生成文章post_name.md和同名文件夹post_name。将图片资源放在post_name中，文章就可以使用相对路径引用图片资源了。</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">![](image.jpg)</span><br></pre></td></tr></table></figure>



<h2 id="标签插件语法引用"><a href="#标签插件语法引用" class="headerlink" title="标签插件语法引用"></a>标签插件语法引用</h2><p>这种相对路径的图片显示方法在博文详情页面显示没有问题，但是在首页预览页面图片将显示不出来。如果希望<strong>图片在文章和首页中同时显示</strong>，可以使用标签插件语法。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 本地图片资源，不限制图片尺寸</span><br><span class="line">&#123;% asset_img image.jpg This is an image %&#125;</span><br><span class="line"># 网络图片资源，限制图片显示尺寸</span><br><span class="line">&#123;% img http:&#x2F;&#x2F;www.viemu.com&#x2F;vi-vim-cheat-sheet.gif 200 400 vi-vim-cheat-sheet %&#125;</span><br></pre></td></tr></table></figure>



<h2 id="HTML语法引用"><a href="#HTML语法引用" class="headerlink" title="HTML语法引用"></a>HTML语法引用</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;img src&#x3D;&quot;SpellCheck.png&quot; width&#x3D;&quot;50%&quot; height&#x3D;&quot;50%&quot; title&#x3D;&quot;拼写检查工具Grammarly.&quot; alt&#x3D;&quot;拼写检查工具Grammarly.&quot;&#x2F;&gt;</span><br></pre></td></tr></table></figure>

<p>直接将<code>![](image.jpg)</code>替换上面的语法即可。</p>
<h2 id="启用fancybox：点击查看图片大图"><a href="#启用fancybox：点击查看图片大图" class="headerlink" title="启用fancybox：点击查看图片大图"></a>启用fancybox：点击查看图片大图</h2><p>我这里使用的是Hexo的NexT主题，NexT主题中提供了fancybox的方便接口。</p>
<p>Usage：<a href="https://github.com/theme-next/theme-next-fancybox3">https://github.com/theme-next/theme-next-fancybox3</a><br>markdown用法：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% img http:&#x2F;&#x2F;www.viemu.com&#x2F;vi-vim-cheat-sheet.gif 600 600 &quot;点击查看大图:vi&#x2F;vim-cheat-sheet&quot; %&#125;</span><br></pre></td></tr></table></figure>



<link rel="stylesheet" href="/labiyouxiaoxin2.github.io/css/spoiler.css" type="text/css"><script src="/labiyouxiaoxin2.github.io/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo -3- 常用命令汇总</title>
    <url>/2020/02/25/hexo/3_hexo_commands/hexo-commands/</url>
    <content><![CDATA[<blockquote>
<p>本文记录Hexo常用命令与相应说明，相关文档也可以参考<a href="https://hexo.io/zh-cn/docs/commands" target="_blank" rel="noopener">官方文档</a>。</p>
</blockquote>
<a id="more"></a>

<h2 id="init"><a href="#init" class="headerlink" title="init"></a>init</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo init [folder]</span><br></pre></td></tr></table></figure>

<blockquote>
<p>新建网站。如果没有设置 <code>folder</code> ，Hexo 默认在目前的文件夹建立网站。</p>
</blockquote>
<h2 id="new"><a href="#new" class="headerlink" title="new"></a>new</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo new [layout] &lt;title&gt;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>新建文章。如果没有设置 <code>layout</code> 的话，默认使用 <a href="https://hexo.io/zh-cn/docs/configuration" target="_blank" rel="noopener">_config.yml</a> 中的 <code>default_layout</code> 参数代替。如果标题包含空格的话，请使用引号括起来。</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo new &quot;post title with whitespace&quot;</span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th align="left">参数</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>-p</code>, <code>--path</code></td>
<td align="left">自定义新文章的路径</td>
</tr>
<tr>
<td align="left"><code>-r</code>, <code>--replace</code></td>
<td align="left">如果存在同名文章，将其替换</td>
</tr>
<tr>
<td align="left"><code>-s</code>, <code>--slug</code></td>
<td align="left">文章的 Slug，作为新文章的文件名和发布后的 URL</td>
</tr>
</tbody></table>
<p>默认情况下，Hexo 会使用文章的标题来决定文章文件的路径。对于独立页面来说，Hexo 会创建一个以标题为名字的目录，并在目录中放置一个 <code>index.md</code> 文件。你可以使用 <code>--path</code> 参数来覆盖上述行为、自行决定文件的目录：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo new page --path about&#x2F;me &quot;About me&quot;</span><br></pre></td></tr></table></figure>

<p>以上命令会创建一个 <code>source/about/me.md</code> 文件，同时 Front Matter 中的 title 为 <code>&quot;About me&quot;</code></p>
<p>注意！title 是必须指定的！如果你这么做并不能达到你的目的：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo new page --path about&#x2F;me</span><br></pre></td></tr></table></figure>

<p>此时 Hexo 会创建 <code>source/_posts/about/me.md</code>，同时 <code>me.md</code> 的 Front Matter 中的 title 为 <code>&quot;page&quot;</code>。这是因为在上述命令中，hexo-cli 将 <code>page</code> 视为指定文章的标题、并采用默认的 <code>layout</code>。</p>
<h2 id="generate"><a href="#generate" class="headerlink" title="generate"></a>generate</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>生成静态文件。</p>
<table>
<thead>
<tr>
<th align="left">选项</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>-d</code>, <code>--deploy</code></td>
<td align="left">文件生成后立即部署网站</td>
</tr>
<tr>
<td align="left"><code>-w</code>, <code>--watch</code></td>
<td align="left">监视文件变动</td>
</tr>
<tr>
<td align="left"><code>-b</code>, <code>--bail</code></td>
<td align="left">生成过程中如果发生任何未处理的异常则抛出异常</td>
</tr>
<tr>
<td align="left"><code>-f</code>, <code>--force</code></td>
<td align="left">强制重新生成文件 Hexo 引入了差分机制，如果 <code>public</code> 目录存在，那么 <code>hexo g</code> 只会重新生成改动的文件。 使用该参数的效果接近 <code>hexo clean &amp;&amp; hexo generate</code></td>
</tr>
<tr>
<td align="left"><code>-c</code>, <code>--concurrency</code></td>
<td align="left">最大同时生成文件的数量，默认无限制</td>
</tr>
</tbody></table>
<p>该命令可以简写为</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo g</span><br></pre></td></tr></table></figure>

<h2 id="publish"><a href="#publish" class="headerlink" title="publish"></a>publish</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo publish [layout] &lt;filename&gt;</span><br></pre></td></tr></table></figure>

<p>发表草稿。</p>
<h2 id="server"><a href="#server" class="headerlink" title="server"></a>server</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>启动服务器。默认情况下，访问网址为： <code>http://localhost:4000/</code>。</p>
<table>
<thead>
<tr>
<th align="left">选项</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>-p</code>, <code>--port</code></td>
<td align="left">重设端口</td>
</tr>
<tr>
<td align="left"><code>-s</code>, <code>--static</code></td>
<td align="left">只使用静态文件</td>
</tr>
<tr>
<td align="left"><code>-l</code>, <code>--log</code></td>
<td align="left">启动日记记录，使用覆盖记录格式</td>
</tr>
</tbody></table>
<p>该命令可以简写为</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo s</span><br></pre></td></tr></table></figure>

<h2 id="deploy"><a href="#deploy" class="headerlink" title="deploy"></a>deploy</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>部署网站。</p>
<table>
<thead>
<tr>
<th align="left">参数</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>-g</code>, <code>--generate</code></td>
<td align="left">部署之前预先生成静态文件</td>
</tr>
</tbody></table>
<p>该命令可以简写为：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo d</span><br></pre></td></tr></table></figure>

<h2 id="render"><a href="#render" class="headerlink" title="render"></a>render</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo render &lt;file1&gt; [file2] ...</span><br></pre></td></tr></table></figure>

<p>渲染文件。</p>
<table>
<thead>
<tr>
<th align="left">参数</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>-o</code>, <code>--output</code></td>
<td align="left">设置输出路径</td>
</tr>
</tbody></table>
<h2 id="migrate"><a href="#migrate" class="headerlink" title="migrate"></a>migrate</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo migrate &lt;type&gt;</span><br></pre></td></tr></table></figure>

<p>从其他博客系统 <a href="https://hexo.io/zh-cn/docs/migration" target="_blank" rel="noopener">迁移内容</a>。</p>
<h2 id="clean"><a href="#clean" class="headerlink" title="clean"></a>clean</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo clean</span><br></pre></td></tr></table></figure>

<p>清除缓存文件 (<code>db.json</code>) 和已生成的静态文件 (<code>public</code>)。</p>
<p>在某些情况（尤其是更换主题后），如果发现您对站点的更改无论如何也不生效，您可能需要运行该命令。</p>
<h2 id="list"><a href="#list" class="headerlink" title="list"></a>list</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo list &lt;type&gt;</span><br></pre></td></tr></table></figure>

<p>列出网站资料。</p>
<h2 id="version"><a href="#version" class="headerlink" title="version"></a>version</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo version</span><br></pre></td></tr></table></figure>

<p>显示 Hexo 版本。</p>
<h2 id="常用组合命令"><a href="#常用组合命令" class="headerlink" title="常用组合命令"></a>常用组合命令</h2><blockquote>
<p>清除缓存、重新生成静态文件</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo g</span><br></pre></td></tr></table></figure>

<blockquote>
<p>清除缓存、重新生成静态文件、同时部署</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo g -d</span><br></pre></td></tr></table></figure>



<h2 id="选项"><a href="#选项" class="headerlink" title="选项"></a>选项</h2><h3 id="安全模式"><a href="#安全模式" class="headerlink" title="安全模式"></a>安全模式</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo --safe</span><br></pre></td></tr></table></figure>

<p>在安全模式下，不会载入插件和脚本。当您在安装新插件遭遇问题时，可以尝试以安全模式重新执行。</p>
<h3 id="调试模式"><a href="#调试模式" class="headerlink" title="调试模式"></a>调试模式</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo --debug</span><br></pre></td></tr></table></figure>

<p>在终端中显示调试信息并记录到 <code>debug.log</code>。当您碰到问题时，可以尝试用调试模式重新执行一次，并 <a href="https://github.com/hexojs/hexo/issues/new">提交调试信息到 GitHub</a>。</p>
<h3 id="简洁模式"><a href="#简洁模式" class="headerlink" title="简洁模式"></a>简洁模式</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo --silent</span><br></pre></td></tr></table></figure>

<p>隐藏终端信息。</p>
<h3 id="自定义配置文件的路径"><a href="#自定义配置文件的路径" class="headerlink" title="自定义配置文件的路径"></a>自定义配置文件的路径</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 使用 custom.yml 代替默认的 _config.yml</span><br><span class="line">$ hexo server --config custom.yml</span><br><span class="line"></span><br><span class="line"># 使用 custom.yml 和 custom2.json，其中 custom2.json 优先级更高</span><br><span class="line">$ hexo generate --config custom.yml,custom2.json,custom3.yml</span><br></pre></td></tr></table></figure>

<p>自定义配置文件的路径，指定这个参数后将不再使用默认的 <code>_config.yml</code>。<br>你可以使用一个 YAML 或 JSON 文件的路径，也可以使用逗号分隔（无空格）的多个 YAML 或 JSON 文件的路径。例如：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 使用 custom.yml 代替默认的 _config.yml</span><br><span class="line">$ hexo server --config custom.yml</span><br><span class="line"></span><br><span class="line"># 使用 custom.yml, custom2.json 和 custom3.yml，其中 custom3.yml 优先级最高，其次是 custom2.json</span><br><span class="line">$ hexo generate --config custom.yml,custom2.json,custom3.yml</span><br></pre></td></tr></table></figure>

<p>当你指定了多个配置文件以后，Hexo 会按顺序将这部分配置文件合并成一个 <code>_multiconfig.yml</code>。如果遇到重复的配置，排在后面的文件的配置会覆盖排在前面的文件的配置。这个原则适用于任意数量、任意深度的 YAML 和 JSON 文件。</p>
<h3 id="显示草稿"><a href="#显示草稿" class="headerlink" title="显示草稿"></a>显示草稿</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo --draft</span><br></pre></td></tr></table></figure>

<p>显示 <code>source/_drafts</code> 文件夹中的草稿文章。</p>
<h3 id="自定义-CWD"><a href="#自定义-CWD" class="headerlink" title="自定义 CWD"></a>自定义 CWD</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo --cwd &#x2F;path&#x2F;to&#x2F;cwd</span><br></pre></td></tr></table></figure>

<p>自定义当前工作目录（Current working directory）的路径。</p>
<link rel="stylesheet" href="/labiyouxiaoxin2.github.io/css/spoiler.css" type="text/css"><script src="/labiyouxiaoxin2.github.io/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo -2- 站点信息配置</title>
    <url>/2020/02/24/hexo/2_hexo_config/Hexo_config/</url>
    <content><![CDATA[<blockquote>
<p> Hexo框架中配置文件内容描述与示例。</p>
</blockquote>
<a id="more"></a>

<h2 id="config-yml-站点配置文件"><a href="#config-yml-站点配置文件" class="headerlink" title="_config.yml - 站点配置文件"></a>_config.yml - 站点配置文件</h2><blockquote>
<p>在各种Hexo相关教程中频繁出现<code>站点配置文件</code>，指的是Hexo根目录中的文件<code>_config.yml</code>。</p>
</blockquote>
<img src="/labiyouxiaoxin2.github.io/2020/02/24/hexo/2_hexo_config/Hexo_config/zhandianpeizhiwenjian.png" class="" title="站点配置文件">

<blockquote>
<p>具体内容也可以参考<a href="https://hexo.io/zh-cn/docs/configuration" target="_blank" rel="noopener">官方文档</a>。</p>
</blockquote>
<ul>
<li>注意：配置过程中每一项的<code>英文冒号</code>后需要一个<code>空格</code>。</li>
</ul>
<h2 id="Site-网站"><a href="#Site-网站" class="headerlink" title="Site - 网站"></a>Site - 网站</h2><table>
<thead>
<tr>
<th align="left">参数</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>title</code></td>
<td align="left">网站标题</td>
</tr>
<tr>
<td align="left"><code>subtitle</code></td>
<td align="left">网站副标题</td>
</tr>
<tr>
<td align="left"><code>description</code></td>
<td align="left">网站描述</td>
</tr>
<tr>
<td align="left"><code>keywords</code></td>
<td align="left">网站的关键词。使用半角逗号 <code>,</code> 分隔多个关键词。</td>
</tr>
<tr>
<td align="left"><code>author</code></td>
<td align="left">您的名字</td>
</tr>
<tr>
<td align="left"><code>language</code></td>
<td align="left">网站使用的语言 (<code>初始建议此处设置为zh-Hans，便于后续稳定翻译</code>)</td>
</tr>
<tr>
<td align="left"><code>timezone</code></td>
<td align="left">网站时区。Hexo 默认使用您电脑的时区。请参考 <a href="https://en.wikipedia.org/wiki/List_of_tz_database_time_zones" target="_blank" rel="noopener">时区列表</a> 进行设置，如 <code>America/New_York</code>, <code>Japan</code>, 和 <code>UTC</code> 。一般的，对于中国大陆地区可以使用 <code>Asia/Shanghai</code>。</td>
</tr>
</tbody></table>
<p><font color='red' face='黑体' size=5><b>这部分是我们刚刚建站时需要设置的部分，建议修改。<br>以我的站点配置为例：</b></font></p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Site</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">又见苍岚</span></span><br><span class="line"><span class="attr">subtitle:</span> <span class="string">'www.zywvvd.com'</span></span><br><span class="line"><span class="attr">description:</span> <span class="string">'Stay hungury ! Stay foolish ！'</span></span><br><span class="line"><span class="attr">keywords:</span> <span class="string">'人工智能, 深度学习, 个人博客'</span></span><br><span class="line"><span class="attr">author:</span> <span class="string">Yiwei</span> <span class="string">Zhang</span></span><br><span class="line"><span class="attr">language:</span> <span class="string">zh-Hans</span></span><br><span class="line"><span class="attr">timezone:</span> <span class="string">Asia/Shanghai</span></span><br></pre></td></tr></table></figure>

<img src="/labiyouxiaoxin2.github.io/2020/02/24/hexo/2_hexo_config/Hexo_config/title.png" class="" title="示例效果">

<h2 id="URL-网址"><a href="#URL-网址" class="headerlink" title="URL - 网址"></a>URL - 网址</h2><table>
<thead>
<tr>
<th align="left">参数</th>
<th align="left">描述</th>
<th align="left">默认值</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>url</code></td>
<td align="left">网址</td>
<td align="left"></td>
</tr>
<tr>
<td align="left"><code>root</code></td>
<td align="left">网站根目录</td>
<td align="left"></td>
</tr>
<tr>
<td align="left"><code>permalink</code></td>
<td align="left">文章的 <a href="https://hexo.io/zh-cn/docs/permalinks" target="_blank" rel="noopener">永久链接</a> 格式</td>
<td align="left"><code>:year/:month/:day/:title/</code></td>
</tr>
<tr>
<td align="left"><code>permalink_defaults</code></td>
<td align="left">永久链接中各部分的默认值</td>
<td align="left"></td>
</tr>
<tr>
<td align="left"><code>pretty_urls</code></td>
<td align="left">改写 <a href="https://hexo.io/zh-cn/docs/variables" target="_blank" rel="noopener"><code>permalink</code></a> 的值来美化 URL</td>
<td align="left"></td>
</tr>
<tr>
<td align="left"><code>pretty_urls.trailing_index</code></td>
<td align="left">是否在永久链接中保留尾部的 <code>index.html</code>，设置为 <code>false</code> 时去除</td>
<td align="left"><code>true</code></td>
</tr>
<tr>
<td align="left"><code>pretty_urls.trailing_html</code></td>
<td align="left">是否在永久链接中保留尾部的 <code>.html</code>, 设置为 <code>false</code> 时去除 (<em>对尾部的 <code>index.html</code>无效</em>)</td>
<td align="left"></td>
</tr>
</tbody></table>
<p><font color='red' face='黑体' size=5><b>url 和 root 需要关联到挂载的服务器目录</b></font></p>
<blockquote>
<p>修改<code>站点配置文件</code>，填入网址设置：</p>
</blockquote>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># URL</span></span><br><span class="line"><span class="comment">## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'</span></span><br><span class="line"><span class="attr">url:</span> <span class="string">http://github.com/&lt;Github账号&gt;/&lt;Github账号&gt;.github.io</span></span><br><span class="line"><span class="attr">root:</span> <span class="string">/&lt;Github账号&gt;.github.io/</span></span><br></pre></td></tr></table></figure>

<p><font color='red' face='黑体' size=5><b>修改文章永久链接</b></font></p>
<blockquote>
<p>默认文章路径类似： <a href="https://www.zywvvd.com/2020/02/27/hexo/xxx" target="_blank" rel="noopener">https://www.zywvvd.com/2020/02/27/hexo/xxx</a></p>
<p>这是因为文章链接配置<code>permalink</code>值默认为<code>:year/:month/:day/:title/</code></p>
<p>不喜欢此种形式链接的同学可以自定义修改，例如：</p>
</blockquote>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">permalink:</span> <span class="string">:category/:title/</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>可以使用如下变量和 Front-matter 中的所有属性。</p>
</blockquote>
<table>
<thead>
<tr>
<th align="left">变量</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>:year</code></td>
<td align="left">文章的发表年份（4 位数）</td>
</tr>
<tr>
<td align="left"><code>:month</code></td>
<td align="left">文章的发表月份（2 位数）</td>
</tr>
<tr>
<td align="left"><code>:i_month</code></td>
<td align="left">文章的发表月份（去掉开头的零）</td>
</tr>
<tr>
<td align="left"><code>:day</code></td>
<td align="left">文章的发表日期 (2 位数)</td>
</tr>
<tr>
<td align="left"><code>:i_day</code></td>
<td align="left">文章的发表日期（去掉开头的零）</td>
</tr>
<tr>
<td align="left"><code>:hour</code></td>
<td align="left">文章发表时的小时 (2 位数)</td>
</tr>
<tr>
<td align="left"><code>:minute</code></td>
<td align="left">文章发表时的分钟 (2 位数)</td>
</tr>
<tr>
<td align="left"><code>:title</code></td>
<td align="left">文件名称</td>
</tr>
<tr>
<td align="left"><code>:post_title</code></td>
<td align="left">文章标题</td>
</tr>
<tr>
<td align="left"><code>:id</code></td>
<td align="left">文章 ID (<em>not persistent across <a href="https://hexo.io/zh-cn/docs/commands#clean" target="_blank" rel="noopener">cache reset</a></em>)</td>
</tr>
<tr>
<td align="left"><code>:category</code></td>
<td align="left">分类。如果文章没有分类，则是 <code>default_category</code> 配置信息。</td>
</tr>
</tbody></table>
<h2 id="Directory-目录"><a href="#Directory-目录" class="headerlink" title="Directory - 目录"></a>Directory - 目录</h2><table>
<thead>
<tr>
<th align="left">参数</th>
<th align="left">描述</th>
<th align="left">默认值</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>source_dir</code></td>
<td align="left">资源文件夹，这个文件夹用来存放内容。</td>
<td align="left"><code>source</code></td>
</tr>
<tr>
<td align="left"><code>public_dir</code></td>
<td align="left">公共文件夹，这个文件夹用于存放生成的站点文件。</td>
<td align="left"><code>public</code></td>
</tr>
<tr>
<td align="left"><code>tag_dir</code></td>
<td align="left">标签文件夹</td>
<td align="left"><code>tags</code></td>
</tr>
<tr>
<td align="left"><code>archive_dir</code></td>
<td align="left">归档文件夹</td>
<td align="left"><code>archives</code></td>
</tr>
<tr>
<td align="left"><code>category_dir</code></td>
<td align="left">分类文件夹</td>
<td align="left"><code>categories</code></td>
</tr>
<tr>
<td align="left"><code>code_dir</code></td>
<td align="left">Include code 文件夹，<code>source_dir</code> 下的子目录</td>
<td align="left"><code>downloads/code</code></td>
</tr>
<tr>
<td align="left"><code>i18n_dir</code></td>
<td align="left">国际化（i18n）文件夹</td>
<td align="left"><code>:lang</code></td>
</tr>
<tr>
<td align="left"><code>skip_render</code></td>
<td align="left">跳过指定文件的渲染。匹配到的文件将会被不做改动地复制到 <code>public</code> 目录中。您可使用 <a href="https://github.com/micromatch/micromatch#extended-globbing">glob 表达式</a>来匹配路径。</td>
<td align="left"></td>
</tr>
</tbody></table>
<h2 id="Writing-文章"><a href="#Writing-文章" class="headerlink" title="Writing - 文章"></a>Writing - 文章</h2><table>
<thead>
<tr>
<th align="left">参数</th>
<th align="left">描述</th>
<th align="left">默认值</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>new_post_name</code></td>
<td align="left">新文章的文件名称</td>
<td align="left">:title.md</td>
</tr>
<tr>
<td align="left"><code>default_layout</code></td>
<td align="left">预设布局</td>
<td align="left">post</td>
</tr>
<tr>
<td align="left"><code>auto_spacing</code></td>
<td align="left">在中文和英文之间加入空格</td>
<td align="left">false</td>
</tr>
<tr>
<td align="left"><code>titlecase</code></td>
<td align="left">把标题转换为 title case</td>
<td align="left">false</td>
</tr>
<tr>
<td align="left"><code>external_link</code></td>
<td align="left">在新标签中打开链接</td>
<td align="left">true</td>
</tr>
<tr>
<td align="left"><code>external_link.enable</code></td>
<td align="left">在新标签中打开链接</td>
<td align="left"><code>true</code></td>
</tr>
<tr>
<td align="left"><code>external_link.field</code></td>
<td align="left">对整个网站（<code>site</code>）生效或仅对文章（<code>post</code>）生效</td>
<td align="left"><code>site</code></td>
</tr>
<tr>
<td align="left"><code>external_link.exclude</code></td>
<td align="left">需要排除的域名。主域名和子域名如 <code>www</code> 需分别配置</td>
<td align="left"><code>[]</code></td>
</tr>
<tr>
<td align="left"><code>filename_case</code></td>
<td align="left">把文件名称转换为 (1) 小写或 (2) 大写</td>
<td align="left">0</td>
</tr>
<tr>
<td align="left"><code>render_drafts</code></td>
<td align="left">显示草稿</td>
<td align="left">false</td>
</tr>
<tr>
<td align="left"><code>post_asset_folder</code></td>
<td align="left">启动 <a href="https://hexo.io/zh-cn/docs/asset-folders" target="_blank" rel="noopener">Asset 文件夹</a> (建议设置为 True )</td>
<td align="left">false</td>
</tr>
<tr>
<td align="left"><code>relative_link</code></td>
<td align="left">把链接改为与根目录的相对位址</td>
<td align="left">false</td>
</tr>
<tr>
<td align="left"><code>future</code></td>
<td align="left">显示未来的文章</td>
<td align="left">true</td>
</tr>
<tr>
<td align="left"><code>highlight</code></td>
<td align="left">代码块的设置</td>
<td align="left"></td>
</tr>
<tr>
<td align="left"><code>highlight.enable</code></td>
<td align="left">开启代码块高亮</td>
<td align="left"><code>true</code></td>
</tr>
<tr>
<td align="left"><code>highlight.auto_detect</code></td>
<td align="left">如果未指定语言，则启用自动检测</td>
<td align="left"><code>false</code></td>
</tr>
<tr>
<td align="left"><code>highlight.line_number</code></td>
<td align="left">显示行数 <em>Enabling this option will also enable <code>wrap</code> option</em></td>
<td align="left"><code>true</code></td>
</tr>
<tr>
<td align="left"><code>highlight.tab_replace</code></td>
<td align="left">用 n 个空格替换 tabs；如果值为空，则不会替换 tabs</td>
<td align="left"><code>&#39;&#39;</code></td>
</tr>
<tr>
<td align="left"><code>highlight.wrap</code></td>
<td align="left">Wrap the code block in <a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/table" target="_blank" rel="noopener">``</a></td>
<td align="left"><code>true</code></td>
</tr>
<tr>
<td align="left"><code>highlight.hljs</code></td>
<td align="left">Use the <code>hljs-*</code> prefix for CSS classes</td>
<td align="left"><code>false</code></td>
</tr>
</tbody></table>
<p><font color='red' face='黑体' size=5><b><code>post_asset_folder</code>修改为true，这样新建文章时会创建同名文件夹，便于后期博客图片等资源管理</b></font></p>
<h2 id="Category-amp-Tag-分类-amp-标签"><a href="#Category-amp-Tag-分类-amp-标签" class="headerlink" title="Category &amp; Tag - 分类 &amp; 标签"></a>Category &amp; Tag - 分类 &amp; 标签</h2><table>
<thead>
<tr>
<th align="left">参数</th>
<th align="left">描述</th>
<th align="left">默认值</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>default_category</code></td>
<td align="left">默认分类</td>
<td align="left"><code>uncategorized</code></td>
</tr>
<tr>
<td align="left"><code>category_map</code></td>
<td align="left">分类别名</td>
<td align="left"></td>
</tr>
<tr>
<td align="left"><code>tag_map</code></td>
<td align="left">标签别名</td>
<td align="left"></td>
</tr>
</tbody></table>
<h2 id="Date-Time-format-日期-时间格式"><a href="#Date-Time-format-日期-时间格式" class="headerlink" title="Date / Time format - 日期 / 时间格式"></a>Date / Time format - 日期 / 时间格式</h2><p>Hexo 使用 <a href="http://momentjs.com/" target="_blank" rel="noopener">Moment.js</a> 来解析和显示时间。</p>
<table>
<thead>
<tr>
<th align="left">参数</th>
<th align="left">描述</th>
<th align="left">默认值</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>date_format</code></td>
<td align="left">日期格式</td>
<td align="left"><code>YYYY-MM-DD</code></td>
</tr>
<tr>
<td align="left"><code>time_format</code></td>
<td align="left">时间格式</td>
<td align="left"><code>HH:mm:ss</code></td>
</tr>
<tr>
<td align="left"><code>use_date_for_updated</code></td>
<td align="left">启用以后，如果 Front Matter 中没有指定 <code>updated</code>， <a href="https://hexo.io/zh-cn/docs/variables#%E9%A1%B5%E9%9D%A2%E5%8F%98%E9%87%8F" target="_blank" rel="noopener"><code>post.updated</code></a> 将会使用 <code>date</code> 的值而不是文件的创建时间。在 Git 工作流中这个选项会很有用</td>
<td align="left"><code>true</code></td>
</tr>
</tbody></table>
<h2 id="Pagination-分页"><a href="#Pagination-分页" class="headerlink" title="Pagination - 分页"></a>Pagination - 分页</h2><table>
<thead>
<tr>
<th align="left">参数</th>
<th align="left">描述</th>
<th align="left">默认值</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>per_page</code></td>
<td align="left">每页显示的文章量 (0 = 关闭分页功能)</td>
<td align="left"><code>10</code></td>
</tr>
<tr>
<td align="left"><code>pagination_dir</code></td>
<td align="left">分页目录</td>
<td align="left"><code>page</code></td>
</tr>
</tbody></table>
<h2 id="Extensions-扩展"><a href="#Extensions-扩展" class="headerlink" title="Extensions - 扩展"></a>Extensions - 扩展</h2><table>
<thead>
<tr>
<th align="left">参数</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>theme</code></td>
<td align="left">当前主题名称。值为<code>false</code>时禁用主题</td>
</tr>
<tr>
<td align="left"><code>theme_config</code></td>
<td align="left">主题的配置文件。在这里放置的配置会覆盖主题目录下的 <code>_config.yml</code> 中的配置</td>
</tr>
<tr>
<td align="left"><code>deploy</code></td>
<td align="left">部署部分的设置</td>
</tr>
<tr>
<td align="left"><code>meta_generator</code></td>
<td align="left"><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/meta#%E5%B1%9E%E6%80%A7" target="_blank" rel="noopener">Meta generator</a> 标签。 值为 <code>false</code> 时 Hexo 不会在头部插入该标签</td>
</tr>
</tbody></table>
<p><font color='red' face='黑体' size=5><b>更换主题时改变theme的值为主题名称</b></font></p>
<h3 id="Include-Exclude-file-s-包括或不包括目录和文件"><a href="#Include-Exclude-file-s-包括或不包括目录和文件" class="headerlink" title="Include / Exclude file(s) - 包括或不包括目录和文件"></a>Include / Exclude file(s) - 包括或不包括目录和文件</h3><blockquote>
<p> 在 Hexo 配置文件中，通过设置 include/exclude 可以让 Hexo 进行处理或忽略某些目录和文件夹。你可以使用 <a href="https://github.com/isaacs/minimatch">glob 表达式</a> 对目录和文件进行匹配。</p>
</blockquote>
<p><code>include</code> and <code>exclude</code> options only apply to the <code>source/</code> folder, whereas <code>ignore</code> option applies to all folders.</p>
<table>
<thead>
<tr>
<th align="left">参数</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>include</code></td>
<td align="left">Hexo 默认会忽略隐藏文件和文件夹（包括名称以下划线和 <code>.</code> 开头的文件和文件夹，Hexo 的 <code>_posts</code> 和 <code>_data</code> 等目录除外）。通过设置此字段将使 Hexo 处理他们并将它们复制到 <code>source</code> 目录下。</td>
</tr>
<tr>
<td align="left"><code>exclude</code></td>
<td align="left">Hexo 会忽略这些文件和目录</td>
</tr>
<tr>
<td align="left"><code>ignore</code></td>
<td align="left">Ignore files/folders</td>
</tr>
</tbody></table>
<link rel="stylesheet" href="/labiyouxiaoxin2.github.io/css/spoiler.css" type="text/css"><script src="/labiyouxiaoxin2.github.io/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo -1- 博客搭建基础教程</title>
    <url>/2020/02/19/hexo/1_hexo_build/Hexo/</url>
    <content><![CDATA[<blockquote>
<p>建立个人博客的需求由来已久，能拥有自己的技术博客是广大程序员的梦想。相比于早些时候的WordPress、织梦等框架，就个人站点来说，用Hexo搭建博客可以用“怎一个爽字了得”形容。Hexo基于Node.js开发，具有轻量、方便、易部署等特点，主题丰富简约，依赖github即可构建站点，近些年受到广泛关注。此篇文章旨在和与我一样的初学者分享经验，有疑问欢迎在评论区交流。</p>
</blockquote>
<a id="more"></a>



<h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><ul>
<li><p><code>github账号</code>：需要申请一个属于你的github账号，可以在<a href="https://github.com/">这里申请</a>。</p>
</li>
<li><p><code>git bash</code>： 需要有git bash运行环境，相关安装和使用教程请<a href="%5Bhttps://www.baidu.com/s?wd=gitbash&rsv_spt=1&rsv_iqid=0xeaa75c680004abbf&issp=1&f=8&rsv_bp=1&rsv_idx=2&ie=utf-8&tn=baiduhome_pg&rsv_enter=1&rsv_dl=ib&rsv_sug3=8&rsv_sug1=7&rsv_sug7=101&rsv_sug2=0&inputT=2890&rsv_sug4=3589">询问度娘</a>。</p>
</li>
<li><p><code>Node.js</code>： 必须安装 Node.js 开发环境，建议参考<a href="https://www.simon96.online/2018/11/10/hexo-env/" target="_blank" rel="noopener">Hexo 环境搭建</a>。</p>
</li>
<li><p><code>个人域名</code>(可选)：申请自己的域名可以有自己专用的地址解析链接，我使用<a href="https://cloud.baidu.com/product/bcd/price.html" target="_blank" rel="noopener">百度智能云</a>申请的域名，用着还不错，也比较便宜。</p>
</li>
<li><p><code>markdown</code>：Hexo使用Markdown解析文章，不熟悉的同学可以移步<a href="https://www.zywvvd.com/2020/02/18/Markdown-%E7%AE%80%E6%98%8E%E6%95%99%E7%A8%8B/" target="_blank" rel="noopener">Markdown 简明教程</a>。</p>
</li>
<li><p><code>html\css\js基础</code>： 有最好，没有也没关系。</p>
</li>
</ul>
<h2 id="Hexo的安装、初始化、本地预览"><a href="#Hexo的安装、初始化、本地预览" class="headerlink" title="Hexo的安装、初始化、本地预览"></a>Hexo的安装、初始化、本地预览</h2><h3 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h3><blockquote>
<p>在git bash环境下输入命令：</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure>

<h3 id="初始化Hexo"><a href="#初始化Hexo" class="headerlink" title="初始化Hexo"></a>初始化Hexo</h3><blockquote>
<p>在选好的文件夹下运行命令，我们以 TestHexo 为例设立我们的第一个Hexo 站点。</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo init TestHexo</span><br></pre></td></tr></table></figure>

<img src="/labiyouxiaoxin2.github.io/2020/02/19/hexo/1_hexo_build/Hexo/anzhuanghexo.png" class="" title="安装">

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd TestHexo</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure>

<blockquote>
<p>完成后在TestHexo 文件夹中会有如下内容：</p>
</blockquote>
<img src="/labiyouxiaoxin2.github.io/2020/02/19/hexo/1_hexo_build/Hexo/chushihuawenjianjia.png" class="" title="初始化Hexo文件">

<p>如果你坚持到了这里，那么恭喜你：</p>
<p>此时本地的Hexo站点已经完成了（什么不是刚开始么？？ 是的已经结束了）。</p>
<h3 id="本地预览"><a href="#本地预览" class="headerlink" title="本地预览"></a>本地预览</h3><blockquote>
<p>为了查看本地站点实际效果，输入命令：</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo server</span><br></pre></td></tr></table></figure>

<p>或</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure>

<blockquote>
<p>会在本地搭建服务器挂载生成的本地站点，通过访问 <a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000</a> 浏览自己的网站。</p>
</blockquote>
<img src="/labiyouxiaoxin2.github.io/2020/02/19/hexo/1_hexo_build/Hexo/yulanyemian.png" class="" title="预览页面">



<h2 id="Hexo-部署到Github"><a href="#Hexo-部署到Github" class="headerlink" title="Hexo 部署到Github"></a>Hexo 部署到Github</h2><h3 id="在Github端创建仓库"><a href="#在Github端创建仓库" class="headerlink" title="在Github端创建仓库"></a>在Github端创建仓库</h3><p> 仓库名：&lt;Github 账号&gt;.github.io</p>
<h3 id="安装Hexo-git-插件"><a href="#安装Hexo-git-插件" class="headerlink" title="安装Hexo-git 插件"></a>安装Hexo-git 插件</h3><p>执行命令：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>

<h3 id="链接本地与远程仓库"><a href="#链接本地与远程仓库" class="headerlink" title="链接本地与远程仓库"></a>链接本地与远程仓库</h3><blockquote>
<p>需要在本地建立SSh key，并添加到远程的github配置中。可参考<a href="https://www.zywvvd.com/zywvvd.github.io/2020/02/23/Git-%E8%BF%9E%E6%8E%A5-Github-%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93/" target="_blank" rel="noopener">Git 连接 Github 远程仓库</a></p>
</blockquote>
<h3 id="修改站点配置文件"><a href="#修改站点配置文件" class="headerlink" title="修改站点配置文件"></a>修改<code>站点配置文件</code></h3><blockquote>
<p><code>站点配置文件</code>为Hexo根目录下的 _config.yml文件，编辑该文件，找到相关部分并修改。</p>
</blockquote>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/deployment.html</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">git@github.com:&lt;Github账号&gt;/&lt;Github账号&gt;.github.io.git</span>  <span class="comment">#该地址写ssh地址，不写http地址。</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>修改<code>站点配置文件</code>，填入网址设置：</p>
</blockquote>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># URL</span></span><br><span class="line"><span class="comment">## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'</span></span><br><span class="line"><span class="attr">url:</span> <span class="string">http://github.com/&lt;Github账号&gt;/&lt;Github账号&gt;.github.io</span></span><br><span class="line"><span class="attr">root:</span> <span class="string">/&lt;Github账号&gt;.github.io/</span></span><br></pre></td></tr></table></figure>

<h3 id="推送到Github"><a href="#推送到Github" class="headerlink" title="推送到Github"></a>推送到Github</h3><blockquote>
<p>依次输入命令：</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure>

<blockquote>
<p> 当见到返回：</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">INFO  Deploy done: git</span><br></pre></td></tr></table></figure>

<blockquote>
<p> 即为推送成功。</p>
<p>至此，您的Hexo博客已经搭建在GithubPages, 域名为<code>https://&lt;Github账号&gt;.github.io</code>。</p>
</blockquote>
<h2 id="自定义域名"><a href="#自定义域名" class="headerlink" title="自定义域名"></a>自定义域名</h2><blockquote>
<p>在站点部署在Github基础上，您也可以将自己购买的域名解析到刚刚建立的地址。</p>
</blockquote>
<h3 id="域名解析"><a href="#域名解析" class="headerlink" title="域名解析"></a>域名解析</h3><blockquote>
<p>在域名设置界面:</p>
</blockquote>
<ul>
<li><p>类型选择为 CNAME；</p>
</li>
<li><p>主机记录即域名前缀，填写为www；</p>
</li>
<li><p>记录值填写为&lt;Github账号名称&gt;.github.io；</p>
</li>
<li><p>解析线路，TTL 默认即可。</p>
</li>
</ul>
<img src="/labiyouxiaoxin2.github.io/2020/02/19/hexo/1_hexo_build/Hexo/yumingshezhi.png" class="" title="域名配置">

<blockquote>
<p>提示：域名需要按照国家要求备案</p>
</blockquote>
<img src="/labiyouxiaoxin2.github.io/2020/02/19/hexo/1_hexo_build/Hexo/beian.png" class="" title="域名备案">

<h3 id="仓库设置"><a href="#仓库设置" class="headerlink" title="仓库设置"></a>仓库设置</h3><blockquote>
<p>进入github建立的hexo仓库，点击settings按钮设置仓库，在Custom domin中填入自己的域名，并Save：</p>
</blockquote>
<img src="/labiyouxiaoxin2.github.io/2020/02/19/hexo/1_hexo_build/Hexo/customdomin.png" class="" title="仓库设置">

<h3 id="本地设置"><a href="#本地设置" class="headerlink" title="本地设置"></a>本地设置</h3><blockquote>
<p>在Hexo站点目录source文件夹中，创建名为<code>CNAME</code>的文件，并向其写入<code>自定义域名</code></p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">echo www.zywvvd.com &gt;&gt; CNAME    #域名部分请替换为你自己的</span><br></pre></td></tr></table></figure>

<img src="/labiyouxiaoxin2.github.io/2020/02/19/hexo/1_hexo_build/Hexo/cname.png" class="" title="CNAME文件">

<blockquote>
<p>几分钟之后，即可通过该域名访问Hexo站点。     <a href="https://www.zywvvd.com/" target="_blank" rel="noopener">又见苍岚</a></p>
</blockquote>
<h2 id="更换主题"><a href="#更换主题" class="headerlink" title="更换主题"></a>更换主题</h2><blockquote>
<p> hexo主题有很多,默认主题为landscape。</p>
<p>更换主题需要下载主题包放在Hexo目录中themes文件夹内，如我下载了Next主题，文件夹如图所示。</p>
</blockquote>
<img src="/labiyouxiaoxin2.github.io/2020/02/19/hexo/1_hexo_build/Hexo/nextwenjianjia.png" class="" title="Themes文件夹">

<blockquote>
<p>并将<code>站点配置文件</code>中主题换成相应的主题名：</p>
</blockquote>
<img src="/labiyouxiaoxin2.github.io/2020/02/19/hexo/1_hexo_build/Hexo/zhutipeizhi.png" class="" title="主题配置">

<blockquote>
<p>主题可以在<a href="https://github.com/search?q=hexo-theme">github</a>现有的工作中挑选。</p>
</blockquote>
<h3 id="Next"><a href="#Next" class="headerlink" title="Next"></a>Next</h3><blockquote>
<p>个人使用的是Hexo人气最高的主题Next，当前版本 V 7.7.1，具有简介大方，原生自带大量实用工具，社区活跃等优点。</p>
<p>有喜欢类似风格的小伙伴可以到<a href="https://www.zywvvd.com/categories/Next/" target="_blank" rel="noopener">Next 系列教程</a>了解一下。</p>
</blockquote>
<link rel="stylesheet" href="/labiyouxiaoxin2.github.io/css/spoiler.css" type="text/css"><script src="/labiyouxiaoxin2.github.io/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
</search>
